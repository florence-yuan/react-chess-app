{"version":3,"sources":["components/pieces/King.js","components/pieces/Queen.js","components/pieces/Bishop.js","components/pieces/Rook.js","components/pieces/Knight.js","components/pieces/Pawn.js","components/Functions.js","components/pieces/Piece.js","components/pieces/Empty.js","components/Figure.js","components/Board.js","components/utilities/buttons/NewGame.js","components/utilities/Turn.js","components/Timer.js","components/utilities/Message.js","components/Counter.js","components/KeyboardControl.js","components/PawnPromotion.js","components/utilities/buttons/OpenPieceCnt.js","components/utilities/buttons/OpenControl.js","components/Game.js","components/settingSecs/LayoutSec.js","components/settingSecs/ColorModeSec.js","components/settingSecs/PieceStyleSec.js","components/History.js","components/settingSecs/HistorySec.js","components/settingSecs/TimeLimSec.js","components/utilities/buttons/ColorMode.js","components/utilities/buttons/Undo.js","components/utilities/buttons/OpenSetting.js","components/utilities/buttons/CloseSetting.js","components/utilities/buttons/OpenPiecePos.js","components/Setting.js","components/utilities/Modal.js","components/ErrorBoundary.js","components/System.js","App.js","reportWebVitals.js","index.js"],"names":["kingGenPos","row","col","sideMap","posbt","side","i","j","newRow","newCol","inRange","push","encode","queenGenPos","dir","bishopGenPos","rookGenPos","knightGenPos","absj","Math","abs","jp","pawnGenPos","side1","side2","lsGet","str","JSON","parse","localStorage","getItem","lsSet","obj","setItem","stringify","toTitleCase","toUpperCase","slice","a","b","selectGenPos","name","genPos","Piece","props","state","genPossibilities","this","piece","board","className","onClick","handleClick","onDoubleClick","React","Component","Empty","Figure","Square","class","style","backgroundColor","boxShadow","children","Board","squares","line","classStr","oldRow","oldCol","selected","showPos","possiblePos","includes","square","handleDoubleClick","useRef","ref","NewGameBtn","newGame","appearance","tabIndex","aria-label","Turn","statement","gameComplete","winner","turn","btnCont","formatTime","time","hrs","parseInt","mins","secs","hstr","mstr","sstr","TimePanel","titleSide","Timer","whiteTime","blackTime","isTimeLim","setInterval","tick","turnStart","updateTimeLeft","bind","setState","completed","Message","msg","type","opacity","Counter","cnts","cntSet","pieceCnt","Object","keys","change","initPieceCnt","tdstyle","color","fontWeight","cnt","ControlInput","controlType","camelCaseName","htmlFor","value","val","id","min","max","onChange","e","handleInput","target","ControlField","KeyboardControl","selectRow","selectCol","destinationRow","destinationCol","inputName","inputVal","preventDefault","console","log","row1","col1","row2","col2","handleKeyboardControl","onSubmit","handleSubmit","react","PawnPromoPanel","pawnPromotion","PawnPromotion","OpenPieceCntBtn","title","openPieceCnt","OpenControlBtn","openKeyboardControl","Game","msgType","updateSelect","updateTurnStart","updatePossiblePos","updateMsg","handleUnSelect","handleSelect","handlePawnPromo","selectInfo","newPossiblePos","newType","newMsg","selectFunct","pieceName","oldPieceName","moveInfo","isComplete","updateBoard","addHistory","updateTurn","oldSide","document","body","classList","add","setPawnPromotion","takeOverPiece","takeOverSide","ok","checkMove","isPawnPromotion","pieceSide","pieceOldRow","pieceOldCol","pieceNewRow","pieceNewCol","takeOverName","takeOverRow","takeOverCol","updatePieceCnt","complete","handleMove","IndSwitch","defaultChecked","updateShowPos","checked","PosSwitch","updateDisplayPos","CntSwitch","KeyboardSwitch","LayoutSec","ColorModeOpt","colorMode","updateMode","default","ColorModeSec","isLightDefault","isDarkDefault","isSystemDefault","updateLightMode","updateDarkMode","updateSystemMode","PieceStyleOpt","pieceStyle","updateStyle","PieceStyleSec","isPlainDefault","isFancyDefault","updatePlainStyle","updateFancyStyle","History","history","ind","entry","nentry","toString","centry","tentry","newPieceName","timeTravel","length","cursor","OpenHistory","contains","remove","HistorySec","TimeLimRadio","unit","updateTimeLim","NoTimeLimOpt","updateIsTimeLim","TimeLimOpt","CustomTimeLimInput","handleChange","formattedVal","updateInput","minTime","maxTime","placeholder","CustomTimeLimOpt","TimeLimSec","timeLimOpt","matched","opts","map","optData","ColorModeBtn","curMode","isLightMode","isDarkMode","isSystemMode","window","matchMedia","matches","newMode","updateColorMode","UndoBtn","disabled","OpenSettingBtn","CloseSettingBtn","OpenPiecePosBtn","Setting","cmode","updatePieceStyle","Modal","ErrorBoundary","hasError","error","errorInfo","columns","king","queen","bishop","knight","rook","pawn","0","1","System","pp","pawnPromoInfo","addPiece","updateAddPiece","clear","location","reload","newTurn","origx","origy","newx","newy","flag","newBoard","newSideMap","minus","newPieceCnt","counter","querySelector","keyboard","newShowPos","newColorMode","newPieceStyle","info","newHistory","index","hisLen","pawnPromoCnt","updateAlterPiece","origX","origY","newX","newY","tname","tside","trow","tcol","newIsTimeLim","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11215276.chunk.js","sourcesContent":["import {inRange, encode} from \"./../Functions\"\n\nexport default function kingGenPos(row, col, sideMap) {\n    let posbt = [];\n    let side = sideMap[[row, col]];\n    for (let i = -1; i <= 1; i++) {\n        for (let j = -1; j <= 1; j++) {\n            if (i === 0 && j === 0) continue;\n            let newRow = row + i;\n            let newCol = col + j;\n            if (inRange(newRow, newCol) &&\n                sideMap[[newRow, newCol]] !== side) {\n                posbt.push(encode(newRow, newCol));\n            }\n        }\n    }\n\n    return posbt;\n}","import {inRange, encode} from \"./../Functions\"\n\nexport default function queenGenPos(row, col, sideMap) {\n    let side = sideMap[[row, col]];\n    let posbt = [];\n    const dirs1 = [[-1, 0], [1, 0], [0, -1], [0, 1]]\n    for (let dir of dirs1) {\n        for (   let i = row, j = col;\n                inRange(i, j);\n                i += dir[0], j += dir[1]  ) {\n            if (i === row && j === col)\n                continue;\n            if (sideMap[[i, j]] === side)\n                break;\n            posbt.push(encode(i, j));\n            if (sideMap[[i, j]])\n                break;\n        }\n    }\n    const dirs2 = [[-1, -1], [-1, 1], [1, -1], [1, 1]]\n    for (let dir of dirs2) {\n        for (   let i = row, j = col;\n                inRange(i, j);\n                i += dir[0], j += dir[1]  ) {\n            if (i === row && j === col)\n                continue;\n            if (sideMap[[i, j]] === side)\n                break;\n            posbt.push(encode(i, j));\n            if (sideMap[[i, j]])\n                break;\n        }\n    }\n\n    return posbt;\n}","import {inRange, encode} from \"./../Functions\"\n\nexport default function bishopGenPos(row, col, sideMap) {\n    const dirs = [[-1, -1], [-1, 1], [1, -1], [1, 1]]\n    let side = sideMap[[row, col]];\n    let posbt = [];\n    for (let dir of dirs) {\n        for (   let i = row, j = col;\n                inRange(i, j);\n                i += dir[0], j += dir[1]  ) {\n            if (i === row && j === col)\n                continue;\n            if (sideMap[[i, j]] === side)\n                break;\n            posbt.push(encode(i, j));\n            if (sideMap[[i, j]])\n                break;\n        }\n    }\n\n    return posbt;\n}","import {inRange, encode} from \"./../Functions\"\n\nexport default function rookGenPos(row, col, sideMap) {\n    let posbt = [];\n    let side = sideMap[[row, col]];\n    const dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]]\n    for (let dir of dirs) {\n        for (   let i = row, j = col;\n                inRange(i, j);\n                i += dir[0], j += dir[1]  ) {\n            if (i === row && j === col)\n                continue;\n            if (sideMap[[i, j]] === side)\n                break;\n            posbt.push(encode(i, j));\n            if (sideMap[[i, j]])\n                break;\n        }\n    }\n\n    return posbt;\n}","import {inRange, encode} from \"./../Functions\"\n\nexport default function knightGenPos(row, col, sideMap) {\n    let side = sideMap[[row, col]];\n    let posbt = [];\n    for (let i = -2; i <= 2; i++) {\n        if (i === 0) continue;\n        let absj = 3 - Math.abs(i), j;\n        for (let jp = -1; jp <= 1; jp += 2) {\n            j = absj * jp;\n            if (j === 0) continue;\n            let newRow = row + i;\n            let newCol = col + j;\n            if (inRange(newRow, newCol) && sideMap[[newRow, newCol]] !== side) {\n                posbt.push(encode(newRow, newCol));\n            }\n        }\n    }\n\n    return posbt;\n}","import {inRange, encode} from \"./../Functions\"\n\nexport default function pawnGenPos(row, col, sideMap) {\n    let posbt = [];\n    let side = sideMap[[row, col]];\n    if (side === 1) {\n        let side1 = sideMap[[row + 1, col]];\n        let side2 = sideMap[[row + 2, col]];\n        if (row === 1) {\n            if (side1 === side) {\n                // posbt is empty\n            } else if (side1 === 2) {\n                posbt.push(encode(row + 1, col));\n            } else {\n                posbt.push(encode(row + 1, col));\n                if (side2 !== side) {\n                    posbt.push(encode(row + 2, col));\n                }\n            }\n        } else {\n            if (side1 !== side) {\n                posbt.push(encode(row + 1, col));\n            }\n        }\n    } else {\n        let side1 = sideMap[[row - 1, col]];\n        let side2 = sideMap[[row - 2, col]];\n        if (row === 6) {\n            if (side1 === side) {\n                // posbt is empty\n            } else if (side1 === 1) {\n                posbt.push(encode(row - 1, col));\n            } else {\n                posbt.push(encode(row - 1, col));\n                if (side2 !== side) {\n                    posbt.push(encode(row - 2, col));\n                }\n            }\n        } else {\n            if (side1 !== side) {\n                posbt.push(encode(row - 1, col));\n            }\n        }\n    }\n    let i = (side === 1) ? 1 : -1;\n    for (let j = -1; j <= 1; j += 2) {\n        let newRow = row + i;\n        let newCol = col + j;\n        if (inRange(newRow, newCol) &&\n            sideMap[[newRow, newCol]] === 3 - side) {\n            posbt.push(encode(newRow, newCol));\n        }\n    }\n\n    return posbt;\n}","import kingGenPos from \"./pieces/King\";\nimport queenGenPos from \"./pieces/Queen\";\nimport bishopGenPos from \"./pieces/Bishop\";\nimport rookGenPos from \"./pieces/Rook\";\nimport knightGenPos from \"./pieces/Knight\";\nimport pawnGenPos from \"./pieces/Pawn\";\n\nexport function lsGet(str) {\n    return JSON.parse(localStorage.getItem(str));\n}\n\nexport function lsSet(str, obj) {\n    localStorage.setItem(str, JSON.stringify(obj));\n}\n\nexport function toTitleCase(str) {\n    return str[0].toUpperCase() + str.slice(1);\n}\n\nexport function inRange(row, col) {\n    return (row >= 0 && row < 8 && col >= 0 && col < 8);\n}\n\nexport function encode(a, b) {\n    return a * 8 + b;\n}\n\nexport function selectGenPos(name) {\n    let genPos;\n    if (name === \"king\") {\n        genPos = kingGenPos;\n    } else if (name === \"queen\") {\n        genPos = queenGenPos;\n    } else if (name === \"bishop\") {\n        genPos = bishopGenPos;\n    } else if (name === \"rook\") {\n        genPos = rookGenPos;\n    } else if (name === \"knight\") {\n        genPos = knightGenPos;\n    } else if (name === \"pawn\") {\n        genPos = pawnGenPos;\n    }\n\n    return genPos;\n}","import React from \"react\";\nimport { selectGenPos } from \"../Functions\";\n\nexport default class Piece extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let genPos = selectGenPos(props.name);\n\n        this.state = {\n            genPossibilities: genPos,\n        }\n    }\n\n    inRange(row, col) {\n        return (row >= 0 && row < 8 && col >= 0 && col < 8);\n    }\n\n    encode(a, b) {\n        return a * 8 + b;\n    }\n\n    render() {\n        let side = (this.props.side === 1) ? \"black\" : \"white\";\n        let row = this.props.row;\n        let col = this.props.col;\n        let piece = {\n            side: this.props.sideMap[[row, col]],\n            row: row,\n            col: col,\n            name: this.props.board[[row, col]],\n            \"genPossibilities\": this.state.genPossibilities,\n        }\n\n        return (\n            <div\n                className={`figure ${side} ${this.props.name}`}\n                onClick={ () => this.props.handleClick(piece) }\n                onDoubleClick={ () => this.props.handleClick(piece) }\n            />\n        )\n    }\n}","import Piece from \"./Piece\"\n\nexport default class Empty extends Piece {\n}","import React from \"react\"\nimport Piece from \"./pieces/Piece\"\nimport Empty from \"./pieces/Empty\"\n\nexport default class Figure extends React.Component {\n    render() {\n        if (this.props.name) {\n            return <Piece {...this.props} />\n        } else {\n            return <Empty {...this.props} />;\n        }\n    }\n}","import React, { useRef } from \"react\"\nimport Figure from \"./Figure\"\n\nfunction Square(props) {\n    return (\n        <td\n            className={`square ${props.class}`}\n            style={{\n                backgroundColor: props.backgroundColor,\n                boxShadow: props.boxShadow,\n            }}\n        >\n            {props.children}\n        </td>\n    )\n}\n\nexport default function Board(props) {\n    let squares = [];\n    for (let i = 0; i < 8; i++) {\n        let line = [];\n        for (let j = 0; j < 8; j++) {\n            let classStr = \"\";\n            let oldRow = -1, oldCol = -1;\n            if (props.selected) {\n                oldRow = props.selected[0];\n                oldCol = props.selected[1];\n            }\n            if ((props.selected && oldRow === i && oldCol === j)) {\n                classStr = \"selected\";\n            } else if (oldRow > -1 && oldCol > -1 && props.showPos && props.possiblePos && props.possiblePos.includes(i * 8 + j)) {\n                classStr = `indicate ${props.sideMap[[oldRow, oldCol]] === 1 ? \"black\" : \"white\"} ${props.selected[2]}`;\n            }\n            let square = (\n                <Square\n                    key={i * 8 + j}\n                    class={classStr}\n                >\n                    <Figure\n                        side={props.sideMap[[i, j]]}\n                        name={props.board[[i, j]]}\n                        row={i}\n                        col={j}\n                        board={props.board}\n                        sideMap={props.sideMap}\n                        handleClick={props.handleClick}\n                        handleDoubleClick={props.handleDoubleClick}\n                    />\n                    <div className=\"piece-pos\">\n                        {`(${i + 1}, ${j + 1})`}\n                    </div>\n                </Square>\n            )\n            line.push(square);\n        }\n        squares.push(\n            <tr className=\"line\" key={i}>\n                { line }\n            </tr>\n        )\n    }\n    const board = useRef(null);\n    return (\n        <table className=\"board\" ref={board}>\n            <tbody>\n                { squares }\n            </tbody>\n        </table>\n    )\n}","export default function NewGameBtn(props) {\n    return (\n        <button\n            className=\"newGame ripple-effect\"\n            onClick={props.newGame}\n            style={{ appearance: \"none\" }}\n            tabIndex=\"0\"\n            aria-label=\"reset game / new game\"\n        >\n            {props.children}\n        </button>\n    )\n}","import React from \"react\"\nimport NewGameBtn from \"./buttons/NewGame\"\n\nexport default function Turn(props) {\n    let statement = (\n        (!props.gameComplete)\n        ? `${props.turn === 1 ? \"black\" : \"white\"} to move`\n        : `${props.winner} wins`\n    );\n    let btnCont = (\n        (!props.gameComplete)\n        ? \"reset game\"\n        : \"new game\"\n    );\n\n    return (\n        <span className=\"turn-statement\">\n            {statement}\n            <NewGameBtn\n                newGame={props.newGame}\n            >\n                {btnCont}\n            </NewGameBtn>\n        </span>\n    )\n}","import React from \"react\"\n\nfunction formatTime(time) {\n    let hrs = parseInt(time / 3600);\n    let mins = parseInt(time % 3600 / 60);\n    let secs = time % 3600 % 60;\n\n    let hstr = (hrs > 0) ? hrs + \":\" : \"\";\n    let mstr = (mins >= 10) ? mins : `0${mins}`;\n    let sstr = (secs >= 10) ? secs : `0${secs}`;\n\n    let res = `${hstr}${mstr}:${sstr}`;\n\n    return res;\n}\n\nfunction TimePanel(props) {\n    let titleSide = props.side === \"white\" ? \"White\" : \"Black\";\n    return (\n        <div\n            className={`timePanel timePanel${titleSide}`}\n        >\n            <div className=\"timePanelColor\" />\n            <div className=\"timeLeft\">\n                {formatTime(props.time)}\n            </div>\n        </div>\n    )\n}\n\nexport default class Timer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            whiteTime: props.whiteTime,\n            blackTime: props.blackTime,\n        }\n\n        if (this.props.isTimeLim) {\n            setInterval(\n                () => this.tick(this.props.turnStart),\n            1000);\n        }\n\n        this.props.updateTimeLeft(1, this.props.whiteTime);\n        this.props.updateTimeLeft(2, this.props.blackTime);\n\n        this.tick = this.tick.bind(this);\n    }\n\n    tick(side) {\n        if (!side || this.props.gameComplete) return;\n        if (side === 1) {\n            this.setState((state) => {\n                    if (state.whiteTime > 0) {\n                        return {\n                            whiteTime: state.whiteTime - 1\n                        }\n                    } else {\n                        this.props.completed(1);\n                    }\n                }\n            );\n        } else {\n            this.setState((state) => {\n                    if (state.blackTime > 0) {\n                        return {\n                            blackTime: state.blackTime - 1\n                        }\n                    } else {\n                        this.props.completed(2);\n                    }\n                }\n            );\n        }\n    }\n\n    render() {\n        if (this.props.isTimeLim) {\n            return (\n                <div className=\"timer\">\n                    <TimePanel\n                        side=\"white\"\n                        time={this.state.whiteTime}\n                        tick={this.tick}\n                        turnStart={this.props.turnStart}\n                    />\n                    <TimePanel\n                        side=\"black\"\n                        time={this.state.blackTime}\n                        tick={this.tick}\n                        turnStart={this.props.turnStart}\n                    />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","import React from \"react\"\n\nexport default class Message extends React.Component {\n    render() {\n        if (this.props.msg) {\n            return (\n                <div\n                    className={`msg ${this.props.type}`}\n                    style={{opacity: 1}}\n                >\n                    <span>{this.props.msg}</span>\n                </div>\n            )\n        } else {\n            return (\n                <div\n                    className={`msg`}\n                    style={{opacity: 0}}\n                >\n                    <span>{this.props.msg}</span>\n                </div>\n            )\n        }\n    }\n}","import React from \"react\"\n\nexport default class Counter extends React.Component {\n    render() {\n        let cnts = [], j = 0;\n        for (let i = 0; i < 2; i++) {\n            let side = (i === 0) ? \"black\" : \"white\";\n            let cntSet = this.props.pieceCnt[i];\n            for (let piece of Object.keys(cntSet)) {\n                let change = cntSet[piece] - this.props.initPieceCnt[piece];\n                let ccolor = (change >= 0) ? 'var(--deep-sky-blue)' : 'gray';\n                const tdstyle = {\n                    color: ccolor,\n                    fontWeight: \"bold\"\n                }\n                let cnt = (\n                    <tr key={i * 2 + j}>\n                        <td>{side}</td>\n                        <td>{piece}</td>\n                        <td>{cntSet[piece]}</td>\n                        <td style={tdstyle}>{change}</td>\n                    </tr>\n                );\n                cnts.push(cnt);\n                j++;\n            }\n        }\n        return (\n            <table className=\"counter\">\n                <thead>\n                    <tr>\n                        <th>Side</th>\n                        <th>Piece name</th>\n                        <th>Count</th>\n                        <th>Change</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {cnts}\n                </tbody>\n            </table>\n        )\n    }\n}","import react from \"react\";\nimport {toTitleCase} from \"./Functions\";\n\nfunction ControlInput(props) {\n    let name = `${props.controlType}-${props.dir}`;\n    let camelCaseName = `${props.controlType}${toTitleCase(props.dir)}`;\n    return (\n        <div className=\"control-input\">\n            <label htmlFor={name}>{props.dir === \"row\" ? \"row\" : \"column\"} </label>\n            <input\n                value={props.val}\n                type=\"number\"\n                name={name}\n                id={name}\n                className=\"num-input\"\n                min=\"1\"\n                max=\"8\"\n                onChange={\n                    (e) => {\n                        props.handleInput(camelCaseName, e.target.value);\n                    }\n                }\n            />\n        </div>\n    )\n}\n\nfunction ControlField(props) {\n    return (\n        <fieldset>\n            <legend>{toTitleCase(props.controlType)} piece at</legend>\n            <div className=\"control-inputs\">\n                <ControlInput\n                    controlType={props.controlType}\n                    dir=\"row\"\n                    val={props.row}\n                    handleInput={props.handleInput}\n                />\n                <ControlInput\n                    controlType={props.controlType}\n                    dir=\"col\"\n                    val={props.col}\n                    handleInput={props.handleInput}\n                />\n            </div>\n        </fieldset>\n    )\n}\n\nexport default class KeyboardControl extends react.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectRow: \"\",\n            selectCol: \"\",\n            destinationRow: \"\",\n            destinationCol: \"\",\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    inRange(row, col) {\n        return (row >= 0 && row < 8 && col >= 0 && col < 8);\n    }\n\n    handleInput(inputName, inputVal) {\n        this.setState({\n            [inputName]: inputVal,\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(\"submitted\");\n        console.log(\"select\", this.state.selectRow, this.state.selectCol);\n        console.log(\"destination\", this.state.destinationRow, this.state.destinationCol);\n        let row1 = this.state.selectRow;\n        let col1 = this.state.selectCol;\n        let row2 = this.state.destinationRow;\n        let col2 = this.state.destinationCol;\n        if (!row1 || !col1 || !row2 || !col2) {\n            return;\n        }\n        if (!this.inRange(row1, col1) || !this.inRange(row2, col2)) {\n            return;\n        }\n        this.props.handleKeyboardControl(\n            row1 - 1, col1 - 1, row2 - 1, col2 - 1\n        );\n        this.handleInput(\"selectRow\", \"\");\n        this.handleInput(\"selectCol\", \"\");\n        this.handleInput(\"destinationRow\", \"\");\n        this.handleInput(\"destinationCol\", \"\");\n    }\n\n    render() {\n        return (\n            <div className=\"keyboard-control\">\n                <form\n                    onSubmit={(e) => this.handleSubmit(e)}\n                >\n                    <div className=\"control-caption\">\n                        Keyboard Control\n                    </div>\n                    <span className=\"info\">\n                        Info: click on first button on top right\n                        to display piece positions\n                    </span>\n                    <ControlField\n                        row={this.state.selectRow}\n                        col={this.state.selectCol}\n                        controlType=\"select\"\n                        handleInput={this.handleInput}\n                    />\n                    <ControlField\n                        row={this.state.destinationRow}\n                        col={this.state.destinationCol}\n                        controlType=\"destination\"\n                        handleInput={this.handleInput}\n                    />\n                    <input\n                        type=\"submit\"\n                        id=\"control-submit-btn\"\n                        className=\"submit-btn\"\n                    />\n                </form>\n            </div>\n        )\n    }\n}","function PawnPromoPanel(props) {\n    return (\n        <div\n            className=\"promo-opt\"\n            onClick={() => props.pawnPromotion(props.name)}\n        >\n            <input\n                type=\"radio\"\n                id={`promo ${props.name}`}\n                name=\"promo type\"\n                value={`${props.name}`}\n            />\n            <label\n                htmlFor={`promo ${props.name}`}\n            >\n                {props.name}\n            </label>\n        </div>\n    )\n}\n\nexport default function PawnPromotion(props) {\n    return (\n        <div className=\"pawn_promo\">\n            <span>Congratulations! Your pawn has reached the end!</span>\n            <br />\n            <span>Promote your pawn to one of the following --</span>\n            <div className=\"promo_opts\">\n                <PawnPromoPanel\n                    key={0}\n                    name=\"queen\"\n                    pawnPromotion={props.pawnPromotion}\n                />\n                <PawnPromoPanel\n                    key={1}\n                    name=\"knight\"\n                    pawnPromotion={props.pawnPromotion}\n                />\n                <PawnPromoPanel\n                    key={2}\n                    name=\"bishop\"\n                    pawnPromotion={props.pawnPromotion}\n                />\n                <PawnPromoPanel\n                    key={3}\n                    name=\"rook\"\n                    pawnPromotion={props.pawnPromotion}\n                />\n            </div>\n        </div>\n    )\n}","export default function OpenPieceCntBtn(props) {\n    return (\n        <button\n            className=\"btn more ripple-effect\"\n            title=\"piece count\"\n            aria-label=\"open piece count\"\n            onClick={props.openPieceCnt}\n            tabIndex=\"0\"\n        />\n    )\n}\n","export default function OpenControlBtn(props) {\n    return (\n        <button\n            className=\"btn open-control ripple-effect\"\n            title=\"open control\"\n            aria-label=\"open keyboard control\"\n            onClick={props.openKeyboardControl}\n            tabIndex=\"0\"\n        />\n    )\n}","import React from \"react\"\nimport Board from \"./Board\"\nimport Turn from \"./utilities/Turn\"\nimport Timer from \"./Timer\"\nimport Message from \"./utilities/Message\"\nimport Counter from \"./Counter\"\nimport KeyboardControl from \"./KeyboardControl\"\nimport PawnPromotion from \"./PawnPromotion\"\nimport OpenPieceCntBtn from \"./utilities/buttons/OpenPieceCnt\"\nimport OpenControlBtn from \"./utilities/buttons/OpenControl\"\nimport { selectGenPos } from \"./Functions\"\n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            side: props.side,\n            selected: null,\n            turnStart: null,\n            msg: null,\n            msgType: null,\n            possiblePos: [],\n        };\n        \n        this.updateSelect = this.updateSelect.bind(this);\n        this.updateTurnStart = this.updateTurnStart.bind(this);\n        this.updatePossiblePos = this.updatePossiblePos.bind(this);\n        this.updateMsg = this.updateMsg.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleUnSelect = this.handleUnSelect.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handlePawnPromo = this.handlePawnPromo.bind(this);\n        this.handleKeyboardControl = this.handleKeyboardControl.bind(this);\n    }\n\n    updateSelect(selectInfo) {\n        console.log(selectInfo);\n        this.setState({\n            selected: selectInfo,\n        });\n    }\n\n    updateTurnStart(side) {\n        this.setState({\n            turnStart: side,\n        });\n    }\n\n    updatePossiblePos(newPossiblePos) {\n        this.setState({\n            possiblePos: newPossiblePos\n        });\n    }\n\n    updateMsg(newType, newMsg) {\n        this.setState({\n            msgType: newType,\n            msg: newMsg,\n        });\n    }\n\n    encode(a, b) {\n        return a * 8 + b;\n    }\n\n    checkMove(oldRow, oldCol, newRow, newCol, selected = null) {\n        let selectFunct = selected ? selected[3] : this.state.selected[3];\n        const posbt = selectFunct(oldRow, oldCol, this.props.sideMap);\n        return posbt.includes(this.encode(newRow, newCol));\n    }\n\n    handleUnSelect(pieceName, oldRow, oldCol) {\n        let msg = `Un-selected ${pieceName} at (${oldRow}, ${oldCol})`;\n        this.updateSelect(null);\n        this.updatePossiblePos(null);\n        this.updateMsg(\"complete\", msg);\n    }\n\n    handleSelect(oldPieceName, oldRow, oldCol, newRow, newCol, moveInfo) {\n        let msg = `Moved ${oldPieceName} to (${newRow}, ${newCol})`;\n        this.updateSelect(null);\n        this.updateMsg(\"complete\", msg);\n        let isComplete = this.props.updateBoard(oldRow, oldCol, newRow, newCol);\n        this.props.addHistory(moveInfo);\n        this.props.updateTurn();\n\n        return isComplete;\n    }\n\n    handlePawnPromo(oldPieceName, oldSide, newRow, newCol) {\n        if (oldPieceName === \"pawn\" &&\n            ((oldSide === 1 && newRow === 7)\n          || (oldSide === 2 && newRow === 0))) {\n            document.body.classList.add(\"open-promo\");\n            console.log(\"set pawn promotion\", oldSide);\n            this.props.setPawnPromotion(oldSide, newRow, newCol);\n        }\n    }\n\n    handleMove(oldPieceName, oldSide, oldRow, oldCol, newRow, newCol, selected = null) {\n        let takeOverPiece = this.props.board[[newRow, newCol]];\n        let takeOverSide = this.props.sideMap[[newRow, newCol]];\n\n        let ok = this.checkMove(oldRow, oldCol, newRow, newCol, selected);\n        console.log(`move ${oldPieceName} from (${oldRow}, ${oldCol}) to (${newRow}, ${newCol})`);\n        if (ok) {\n            // Move Info (for history)\n            let moveInfo = {\n                isPawnPromotion: false,\n                pieceName: oldPieceName,\n                pieceSide: oldSide,\n                pieceOldRow: oldRow,\n                pieceOldCol: oldCol,\n                pieceNewRow: newRow,\n                pieceNewCol: newCol,\n                takeOverName: null,\n                takeOverSide: null,\n                takeOverRow: null,\n                takeOverCol: null,\n            };\n\n            // Deal with possible piece take over\n            if (takeOverSide && takeOverPiece) {\n                this.props.updatePieceCnt(takeOverSide, takeOverPiece);\n                moveInfo.takeOverName = takeOverPiece;\n                moveInfo.takeOverSide = takeOverSide;\n                moveInfo.takeOverRow = newRow;\n                moveInfo.takeOverCol = newCol;\n            }\n            \n            // Select piece\n            let isComplete = this.handleSelect(oldPieceName, oldRow, oldCol, newRow, newCol, moveInfo);\n\n            // Deal with possible pawn promotion\n            if (!isComplete)\n                this.handlePawnPromo(oldPieceName, oldSide, newRow, newCol);\n\n            // Clear possible positions\n            this.updatePossiblePos(null);\n            \n            // For Timer\n            this.updateTurnStart(oldSide);\n        } else {\n            // Warning: wrong move\n            this.updateMsg(\"warning\", `Wrong move`);\n        }\n    }\n\n    handleClick(piece) {\n        if (this.props.complete) return;\n        \n        let selectInfo = this.state.selected;\n        let side = piece.side;\n        let turn = this.props.turn;\n        let newRow = piece.row;\n        let newCol = piece.col;\n        let pieceName = piece.name;\n        \n        if (selectInfo) {\n            let oldRow = selectInfo[0];\n            let oldCol = selectInfo[1];\n            let oldPieceName = selectInfo[2];\n            let oldSide = this.props.sideMap[[oldRow, oldCol]];\n\n            // Already selected piece, now selecting destination\n            if (newRow === oldRow && newCol === oldCol) {\n                // un-select piece\n                this.handleUnSelect(pieceName, oldRow, oldCol);\n            } else {\n                this.handleMove(oldPieceName, oldSide, oldRow, oldCol, newRow, newCol);\n            }\n        } else {\n            if (side === turn) {\n                if (!pieceName) return;\n                // this is 'side''s turn\n                this.updateSelect([newRow, newCol, pieceName, piece.genPossibilities]);\n                this.updateMsg(\"complete\", `Selected ${pieceName} at (${newRow}, ${newCol})`);\n                const posbt = piece.genPossibilities(newRow, newCol, this.props.sideMap);\n                this.updatePossiblePos(posbt);\n            } else {\n                // this isn't 'side''s turn\n                this.updateMsg(\"warning\", `It's ${turn === 1 ? \"black\" : \"white\"}'s turn`);\n            }\n        }\n    }\n\n    handleDoubleClick(piece) {\n        if (this.props.complete) return;\n\n        let side = piece.side;\n        let turn = this.props.turn;\n        let newRow = piece.row;\n        let newCol = piece.col;\n        let pieceName = piece.name;\n\n        if (side === turn) {\n            this.updateSelect([newRow, newCol, pieceName, piece.genPossibilities]);\n            const posbt = piece.genPossibilities(newRow, newCol, this.props.sideMap);\n            this.updatePossiblePos(posbt);\n            this.updateMsg(\"complete\", `Selected ${this.props.name} at (${newRow}, ${newCol})`);\n        } else {\n            this.updateMsg(\"warning\", `It's ${turn === 1 ? \"black\" : \"white\"}'s turn`);\n        }\n    }\n\n    handleKeyboardControl(row1, col1, row2, col2) {\n        if (this.props.complete) return;\n\n        let oldSide = this.props.sideMap[[row1, col1]];\n        let turn = this.props.turn;\n        let oldPieceName = this.props.board[[row1, col1]];\n        if (oldSide === turn) {\n            let selectInfo = [row1, col1, oldPieceName, selectGenPos(oldPieceName)]\n            const posbt = selectGenPos(oldPieceName)(row1, col1, this.props.sideMap);\n            this.updatePossiblePos(posbt);\n            this.handleMove(oldPieceName, oldSide, row1, col1, row2, col2, selectInfo);\n        } else {\n            console.log(oldSide, turn);\n            this.updateMsg(\"warning\", `It's ${turn === 1 ? \"black\" : \"white\"}'s turn`);\n        }\n    }\n    \n    render() {\n        return (\n            <>\n                <Turn\n                    gameComplete={this.props.complete}\n                    winner={this.props.winner}\n                    turn={this.props.turn}\n                    newGame={this.props.newGame}\n                />\n                <Timer\n                    gameComplete={this.props.complete}\n                    isTimeLim={this.props.isTimeLim}\n                    whiteTime={this.props.whiteTime}\n                    blackTime={this.props.blackTime}\n                    turnStart={this.state.turnStart}\n                    completed={this.props.completed}\n                    updateTimeLeft={this.props.updateTimeLeft}\n                />\n                <Board\n                    {...this.state}\n                    showPos={this.props.showPos}\n                    board={this.props.board}\n                    sideMap={this.props.sideMap}\n                    handleClick={this.handleClick}\n                    handleDoubleClick={this.handleDoubleClick}\n                />\n                <Message\n                    type={this.state.msgType}\n                    msg={this.state.msg}\n                />\n                <div className=\"countCont\">\n                    <OpenPieceCntBtn\n                        openPieceCnt={this.props.openPieceCnt}\n                    />\n                    <Counter\n                        pieceCnt={this.props.pieceCnt}\n                        initPieceCnt={this.props.initPieceCnt}\n                    />\n                </div>\n                <PawnPromotion\n                    pawnPromotion={this.props.pawnPromotion}\n                />\n                <div className=\"controlCont\">\n                    <OpenControlBtn\n                        openKeyboardControl={this.props.openKeyboardControl}\n                    />\n                    <KeyboardControl\n                        handleKeyboardControl={this.handleKeyboardControl}\n                    />\n                </div>\n            </>\n        );\n    }\n}","function IndSwitch(props) {\n    return (\n        <label className=\"switch\">\n            <input type=\"checkbox\" id=\"input1\"\n                defaultChecked\n                onChange={\n                    (e) => {\n                        props.updateShowPos(e.target.checked);\n                    }\n                }\n                tabIndex=\"0\"\n            />\n            <span className=\"slider round\"></span>\n        </label>\n    )\n}\n\nfunction PosSwitch(props) {\n    return (\n        <label className=\"switch\">\n            <input type=\"checkbox\" id=\"input2\"\n                onChange={\n                    (e) => {\n                        props.updateDisplayPos(e.target.checked);\n                    }\n                }\n                tabIndex=\"0\"\n            />\n            <span className=\"slider round\"></span>\n        </label>\n    )\n}\n\nfunction CntSwitch(props) {\n    return (\n        <label className=\"switch\">\n            <input type=\"checkbox\" id=\"input3\"\n                onChange={\n                    () => {\n                        props.openPieceCnt();\n                    }\n                }\n                tabIndex=\"0\"\n            />\n            <span className=\"slider round\"></span>\n        </label>\n    )\n}\n\nfunction KeyboardSwitch(props) {\n    return (\n        <label className=\"switch\">\n            <input type=\"checkbox\" id=\"input4\"\n                onChange={\n                    () => {\n                        props.openKeyboardControl();\n                    }\n                }\n                tabIndex=\"0\"\n            />\n            <span className=\"slider round\"></span>\n        </label>\n    )\n}\n\nexport default function LayoutSec(props) {\n    return (\n        <div>\n            <div className=\"setting switchSet\">\n                <span>Indicate possible positions for piece movement</span>\n                <IndSwitch\n                    updateShowPos={props.updateShowPos}\n                />\n            </div>\n            <div className=\"setting switchSet\">\n                <span>Display positions of pieces for keyboard control</span>\n                <PosSwitch\n                    updateDisplayPos={props.updateDisplayPos}\n                />\n            </div>\n            <div className=\"setting switchSet\">\n                <span>Open table of piece count for black and white sides</span>\n                <CntSwitch\n                    openPieceCnt={props.openPieceCnt}\n                />\n            </div>\n            <div className=\"setting switchSet\">\n                <span>Open form for keyboard control</span>\n                <KeyboardSwitch\n                    openKeyboardControl={props.openKeyboardControl}\n                />\n            </div>\n        </div>\n    )\n}","import {toTitleCase} from \"./../Functions\"\n\nfunction ColorModeOpt(props) {\n    return (\n        <div className=\"ripple-effect\">\n            <input\n                type=\"radio\"\n                id={`${props.colorMode}_mode`}\n                name=\"mode\"\n                onChange={props.updateMode}\n                tabIndex=\"0\"\n                defaultChecked={props.default === true}\n            />\n            <label\n                htmlFor={`${props.colorMode}_mode`}\n            >\n                {toTitleCase(props.colorMode)} Mode\n            </label>\n        </div>\n    )\n}\n\nexport default function ColorModeSec(props) {\n    let isLightDefault = props.colorMode === \"light\";\n    let isDarkDefault = props.colorMode === \"dark\";\n    let isSystemDefault = props.colorMode === \"system\";\n\n    return (\n        <div className=\"setting modeSet\">\n            <span>Choose color mode</span>\n            <ColorModeOpt\n                colorMode=\"light\"\n                updateMode={props.updateLightMode}\n                default={isLightDefault}\n            />\n            <ColorModeOpt\n                colorMode=\"dark\"\n                updateMode={props.updateDarkMode}\n                default={isDarkDefault}\n            />\n            <ColorModeOpt\n                colorMode=\"system\"\n                updateMode={props.updateSystemMode}\n                default={isSystemDefault}\n            />\n        </div>\n    )\n}","import {toTitleCase} from \"./../Functions\"\n\nfunction PieceStyleOpt(props) {\n    return (\n        <div className=\"ripple-effect\">\n            <input\n                type=\"radio\"\n                id={`${props.pieceStyle}_style`}\n                name=\"style\"\n                onChange={props.updateStyle}\n                tabIndex=\"0\"\n                defaultChecked={props.default === true}\n            />\n            <label\n                htmlFor={`${props.pieceStyle}_style`}\n            >\n                {toTitleCase(props.pieceStyle)} Style Chess Pieces\n            </label>\n        </div>\n    )\n}\n\nexport default function PieceStyleSec(props) {\n    let isPlainDefault = props.pieceStyle === \"plain\";\n    let isFancyDefault = props.pieceStyle === \"fancy\";\n\n    return (\n        <div className=\"setting pieceSet\">\n            <span>Choose chess piece style</span>\n            <PieceStyleOpt\n                pieceStyle=\"plain\"\n                updateStyle={props.updatePlainStyle}\n                default={isPlainDefault}\n            />\n            <PieceStyleOpt\n                pieceStyle=\"fancy\"\n                updateStyle={props.updateFancyStyle}\n                default={isFancyDefault}\n            />\n        </div>\n    )\n}","export default function History(props) {\n    const history = [];\n    for (let ind in props.history) {\n        let entry = props.history[ind];\n        if (entry.isPawnPromotion)\n            continue;\n        let nentry = -1;\n        if (props.history) nentry = props.history[(parseInt(ind) + 1).toString(10)];\n        let centry = `Move ${entry.pieceSide === 1 ? \"black\" : \"white\"} ${entry.pieceName}\\\n         from (${entry.pieceOldRow}, ${entry.pieceOldCol})\\\n         to (${entry.pieceNewRow}, ${entry.pieceNewCol})`;\n        let tentry = \"\";\n        if (entry.takeOverName) {\n            tentry = ` , take over ${entry.takeOverSide === 1 ? \"black\" : \"white\"} ${entry.takeOverName}`;\n        }\n        centry += tentry;\n        if (nentry && nentry.isPawnPromotion) {\n            centry += `, promote ${nentry.pieceSide === 1 ? \"black\" : \"white\"}  pawn\\\n            at (${nentry.row}, ${nentry.col}) to ${nentry.newPieceName}`;\n        }\n        history.push(\n            <li\n                key={ind}\n                onClick={() => props.timeTravel(ind)}\n            >{centry}\n            </li>\n        );\n    }\n    if (history.length === 0) {\n        history.push(\n            <li key={0} style={{cursor: \"text\"}}>History is empty</li>\n        );\n    }\n    return (\n        <ol className=\"history\">\n            {history}\n        </ol>\n    );\n}","import History from \"./../History\"\n\nfunction OpenHistory() {\n    return (\n        <span\n            onClick={\n                (e) => {\n                    if (e.target.classList.contains(\"hist-open\"))\n                        e.target.classList.remove(\"hist-open\");\n                    else\n                        e.target.classList.add(\"hist-open\");\n                }\n            }\n            tabIndex=\"0\"\n        >Open history and time travel\n        </span>\n    )\n}\n\nexport default function HistorySec(props) {\n    return (\n        <div className=\"setting extSet\">\n            <OpenHistory />\n            <div className=\"hist-ext\">\n                <span className=\"info\">Info: Click on entry to reverse step and newer (following) steps</span>\n                <History\n                    history={props.history}\n                    timeTravel={props.timeTravel}\n                />\n            </div>\n        </div>\n    )\n}","import react from \"react\"\nimport {lsGet} from \"./../Functions\"\n\nfunction timeToSecs(time, unit) {\n    if (unit === \"hour\") {\n        return time * 3600;\n    } else if (unit === \"minute\") {\n        return time * 60;\n    } else if (unit === \"second\") {\n        return time;\n    }\n\n    return null;\n}\n\nfunction TimeLimRadio(props) {\n    let secs = timeToSecs(props.time, props.unit);\n    return (\n        <input\n            type=\"radio\"\n            id={props.id}\n            name=\"time\"\n            tabIndex=\"0\"\n            checked={props.checked}\n            onChange={() => {\n                if (props.id === \"no_time_lim\") {\n                    props.updateTimeLim(false);\n                } else {\n                    props.updateTimeLim(secs);\n                }\n            }}\n        />\n    )\n}\n\nfunction NoTimeLimOpt(props) {\n    return (\n        <div className=\"ripple-effect\">\n            <TimeLimRadio\n                id={`no_time_lim`}\n                checked={props.checked}\n                updateTimeLim={props.updateIsTimeLim}\n            />\n            <label htmlFor={`no_time_lim`}>\n                None\n            </label>\n        </div>\n    )\n}\n\nfunction TimeLimOpt(props) {\n    return (\n        <div className=\"ripple-effect\">\n            <TimeLimRadio\n                id={`${props.time}_${props.unit}`}\n                time={props.time}\n                unit={props.unit}\n                checked={props.checked}\n                updateTimeLim={props.updateTimeLim}\n            />\n            <label htmlFor={`${props.time}_${props.unit}`}>\n                {props.time} {props.unit}{props.time > 1 ? 's' : ''}\n            </label>\n        </div>\n    )\n}\n\nclass CustomTimeLimInput extends react.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            value: \"\",\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        let val = e.target.value, formattedVal;\n        if (this.state.value.length > 1) {\n            formattedVal = val.slice(val.length - 2, val.length);\n            this.setState({\n                value: formattedVal,\n            });\n            this.props.updateInput(this.props.unit, formattedVal);\n        } else {\n            formattedVal = (val.length === 1) ? \"0\" + val : val;\n            this.setState({\n                value: formattedVal,\n            });\n            this.props.updateInput(this.props.unit, formattedVal);\n        }\n        if (formattedVal.length < 2) {\n            formattedVal = \"0\" + val;\n            this.setState({\n                value: formattedVal,\n            });\n            this.props.updateInput(this.props.unit, formattedVal);\n        }\n    }\n\n    render() {\n        return (\n            <input\n                type=\"number\"\n                min={this.props.minTime}\n                max={this.props.maxTime}\n                name={this.props.unit}\n                id={this.props.unit}\n                className=\"num-input\"\n                aria-label={this.props.unit}\n                placeholder=\"00\"\n                value={this.state.value}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n\nclass CustomTimeLimOpt extends react.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hrs: 0,\n            mins: 0,\n            secs: 0,\n        }\n\n        this.updateInput = this.updateInput.bind(this);\n    }\n\n    updateInput(unit, value) {\n        value = parseInt(value);\n        if (unit === \"hour\") {\n            this.setState({\n                hrs: value,\n            })\n        } else if (unit === \"minute\") {\n            this.setState({\n                mins: value,\n            })\n        } else if (unit === \"second\") {\n            this.setState({\n                secs: value,\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"custom-time-opt\">\n                <TimeLimRadio\n                    id=\"custom_time\"\n                    time={\n                        parseInt(this.state.hrs) * 3600\n                        + parseInt(this.state.mins) * 60\n                        + parseInt(this.state.secs)\n                    }\n                    unit=\"second\"\n                    updateTimeLim={this.props.updateTimeLim}\n                />\n                <label\n                    htmlFor=\"custom_time\"\n                    className=\"custom-time-wrapper\"\n                >\n                    <label htmlFor=\"cust\">Enter custom time limit: </label>\n                    <br />\n                    <div className=\"time_input\">\n                        <CustomTimeLimInput\n                            minTime=\"0\"\n                            maxTime=\"10\"\n                            unit=\"hour\"\n                            updateInput={this.updateInput}\n                        />\n                        <span className=\"time_colon\">:</span>\n                        <CustomTimeLimInput\n                            minTime=\"0\"\n                            maxTime=\"59\"\n                            unit=\"minute\"\n                            updateInput={this.updateInput}\n                        />\n                        <span className=\"time_colon\">:</span>\n                        <CustomTimeLimInput\n                            minTime=\"0\"\n                            maxTime=\"59\"\n                            unit=\"second\"\n                            updateInput={this.updateInput}\n                        />\n                    </div>\n                </label>\n            </div>\n        )\n    }\n}\n\nexport default function TimeLimSec(props) {\n    let timeLimOpt = lsGet(\"timeLimOpt\") || -1;\n\n    const optDatas = [\n        [5, \"minute\"],\n        [10, \"minute\"],\n        [15, \"minute\"],\n        [30, \"minute\"],\n        [45, \"minute\"],\n        [1, \"hour\"],\n        [1.5, \"hour\"],\n        [2, \"hour\"],\n    ];\n\n    let matched = false;\n    let opts = optDatas.map((optData, i) => {\n        let secs = optData[0] * (optData[1] === \"minute\" ? 60 : 3600);\n        if (timeLimOpt === secs)\n            matched = true;\n        return (\n            <TimeLimOpt\n                key={i}\n                time={optData[0]}\n                unit={optData[1]}\n                checked={timeLimOpt === secs}\n                updateTimeLim={props.updateTimeLim}\n            />\n        )\n    });\n\n    return (\n        <div className=\"setting timeSet\">\n            <span>Choose time limit</span>\n            <NoTimeLimOpt\n                checked={!matched}\n                updateIsTimeLim={props.updateIsTimeLim}\n            />\n            {opts}\n            <CustomTimeLimOpt\n                updateTimeLim={props.updateTimeLim}\n            />\n        </div>\n    )\n}","export default function ColorModeBtn(props) {\n    let isLightMode = document.body.classList.contains(\"light-mode\");\n    let isDarkMode = document.body.classList.contains(\"dark-mode\");\n    let isSystemMode = document.body.classList.contains(\"system-mode\");\n\n    let curMode;\n    if (isLightMode) {\n        curMode = \"light\";\n    } else if (isDarkMode) {\n        curMode = \"dark\";\n    } else if (isSystemMode) {\n        if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n            curMode = \"dark\";\n        } else {\n            curMode = \"light\";\n        }\n    }\n    let newMode = (curMode === \"light\") ? \"dark\" : \"light\";\n\n    return (\n        <button\n            className={`btn colorMode ${newMode}Mode ripple-effect`}\n            title={`to ${newMode} mode`}\n            onClick={\n                () => {\n                    if (newMode === \"light\") {\n                        props.updateLightMode();\n                        props.updateColorMode(\"light\");\n                    } else {\n                        props.updateDarkMode();\n                        props.updateColorMode(\"dark\");\n                    }\n                }\n            }\n            tabIndex=\"0\"\n            aria-label={`switch to ${newMode} mode`}\n        />\n    )\n}","export default function UndoBtn(props) {\n    const history = props.history;\n    return (\n        <button\n            className=\"btn reverseOne ripple-effect\"\n            title=\"undo\"\n            onClick={() => {\n                if (history[history.length - 1].isPawnPromotion)\n                    props.timeTravel(-2)\n                else\n                    props.timeTravel(-1)\n            }}\n            disabled={history.length === 0}\n            tabIndex=\"0\"\n            aria-label=\"undo one step\"\n        />\n    )\n}","export default function OpenSettingBtn() {\n    return (\n        <button\n            className=\"btn setSetting ripple-effect\"\n            title=\"setting\"\n            onClick={\n                function () {\n                    const body = document.body;\n                    if (body.classList.contains('open-setting'))\n                        body.classList.remove('open-setting');\n                    else\n                        body.classList.add('open-setting');\n                }\n            }\n            tabIndex=\"0\"\n            aria-label=\"set settings\"\n        />\n    )\n}\n","export default function CloseSettingBtn() {\n    return (\n        <button\n            className=\"btn closeSetting ripple-effect\"\n            title=\"close\"\n            onClick={\n                () => {\n                    document.body.classList.remove(\"open-setting\")\n                }\n            }\n            tabIndex=\"0\"\n            aria-label=\"close settings\"\n        />\n    )\n}","export default function OpenPiecePosBtn() {\n    return (\n        <button\n            className=\"btn open-piece-pos ripple-effect\"\n            title=\"show piece positions\"\n            onClick={\n                function () {\n                    if (document.body.classList.contains('open-piece-pos'))\n                        document.body.classList.remove('open-piece-pos');\n                    else\n                        document.body.classList.add('open-piece-pos');\n                }\n            }\n            tabIndex=\"0\"\n            aria-label=\"show piece positions\"\n        />\n    )\n}","import React from \"react\"\nimport LayoutSec from \"./settingSecs/LayoutSec\";\nimport ColorModeSec from \"./settingSecs/ColorModeSec\";\nimport PieceStyleSec from \"./settingSecs/PieceStyleSec\";\nimport HistorySec from \"./settingSecs/HistorySec\";\nimport TimeLimSec from \"./settingSecs/TimeLimSec\";\nimport ColorModeBtn from \"./utilities/buttons/ColorMode\";\nimport UndoBtn from \"./utilities/buttons/Undo\";\nimport OpenSettingBtn from \"./utilities/buttons/OpenSetting\";\nimport CloseSettingBtn from \"./utilities/buttons/CloseSetting\";\nimport OpenPiecePosBtn from \"./utilities/buttons/OpenPiecePos\"\n\nexport default class Setting extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        \n        this.updateLightMode = this.updateLightMode.bind(this);\n        this.updateDarkMode = this.updateDarkMode.bind(this);\n        this.updateSystemMode = this.updateSystemMode.bind(this);\n\n        this.updatePlainStyle = this.updatePlainStyle.bind(this);\n        this.updateFancyStyle = this.updateFancyStyle.bind(this);\n    }\n\n    componentDidMount() {\n        let pstyle = this.props.pieceStyle;\n        if (pstyle === \"plain\") {\n            this.updatePlainStyle();\n        } else {\n            this.updateFancyStyle();\n        }\n        \n        let cmode = this.props.colorMode;\n        if (cmode === \"light\") {\n            this.updateLightMode();\n        } else if (cmode === \"dark\") {\n            this.updateDarkMode();\n        } else {\n            this.updateSystemMode();\n        }\n    }\n\n    updateLightMode() {\n        if (document.body.classList.contains(\"dark-mode\"))\n            document.body.classList.remove(\"dark-mode\");\n        document.body.classList.add(\"light-mode\");\n        this.props.updateColorMode(\"light\");\n    }\n\n    updateDarkMode() {\n        if (document.body.classList.contains(\"light-mode\"))\n            document.body.classList.remove(\"light-mode\");\n        document.body.classList.add(\"dark-mode\");\n        this.props.updateColorMode(\"dark\");\n    }\n\n    updateSystemMode() {\n        if (document.body.classList.contains(\"light-mode\"))\n            document.body.classList.remove(\"light-mode\");\n        else if (document.body.classList.contains(\"dark-mode\"))\n            document.body.classList.remove(\"dark-mode\");\n        this.props.updateColorMode(\"system\");\n    }\n\n    updatePlainStyle() {\n        if (document.body.classList.contains(\"fancy-style\"))\n            document.body.classList.remove(\"fancy-style\");\n        document.body.classList.add(\"plain-style\");\n        this.props.updatePieceStyle(\"plain\");\n    }\n\n    updateFancyStyle() {\n        if (document.body.classList.contains(\"plain-style\"))\n            document.body.classList.remove(\"plain-style\");\n        document.body.classList.add(\"fancy-style\");\n        this.props.updatePieceStyle(\"fancy\");\n    }\n\n\trender() {\n        return (\n            <>\n                <OpenPiecePosBtn />\n                <ColorModeBtn\n                    updateColorMode={this.props.updateColorMode}\n                    updateLightMode={this.updateLightMode}\n                    updateDarkMode={this.updateDarkMode}\n                />\n                <UndoBtn\n                    history={this.props.history}\n                    timeTravel={this.props.timeTravel}\n                />\n                <OpenSettingBtn />\n                <div className=\"settings\">\n                    <h1>SETTINGS</h1>\n                    <section>\n                        <h2>Appearance</h2>\n                        <LayoutSec\n                            updateShowPos={this.props.updateShowPos}\n                            updateDisplayPos={this.props.updateDisplayPos}\n                            openPieceCnt={this.props.openPieceCnt}\n                            openKeyboardControl={this.props.openKeyboardControl}\n                        />\n                    </section>\n                    <hr />\n                    <section>\n                        <h2>Color Mode</h2>\n                        <ColorModeSec\n                            key={this.props.colorMode}\n                            colorMode={this.props.colorMode}\n                            updateLightMode={this.updateLightMode}\n                            updateDarkMode={this.updateDarkMode}\n                            updateSystemMode={this.updateSystemMode}\n                        />\n                    </section>\n                    <hr />\n                    <section>\n                        <h2>Chess Piece Style</h2>\n                        <PieceStyleSec\n                            pieceStyle={this.props.pieceStyle}\n                            updatePlainStyle={this.updatePlainStyle}\n                            updateFancyStyle={this.updateFancyStyle}\n                        />\n                    </section>\n                    <hr />\n                    <section>\n                        <h2>History</h2>\n                        <HistorySec\n                            history={this.props.history}\n                            timeTravel={this.props.timeTravel}\n                        />\n                    </section>\n                    <hr />\n                    <section>\n                        <h2>Time Limit</h2>\n                        <TimeLimSec\n                            updateIsTimeLim={this.props.updateIsTimeLim}\n                            updateTimeLim={this.props.updateTimeLim}\n                        />\n                    </section>\n                    <CloseSettingBtn />\n                </div>\n            </>\n        );\n    }\n}","export default function Modal() {\n    return (\n        <div className=\"modal\"\n            onClick={\n                function () {\n                    const body = document.body;\n                    body.classList.remove('open-setting');\n                    body.classList.remove('open-promo');\n                }\n            }\n        />\n    );\n}","import React from \"react\"\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {\n            hasError: true\n        };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.error(error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className=\"errorBoundary\">\n                    <div className=\"errorPic\"></div>\n                    <h1>Sorry, something went wrong.</h1>\n                </div>\n            );\n        }\n        return this.props.children;\n    }\n}","import React from \"react\"\nimport Game from \"./Game\"\nimport Setting from \"./Setting\"\nimport Modal from \"./utilities/Modal\";\nimport ErrorBoundary from \"./ErrorBoundary\"\nimport {lsGet, lsSet} from \"./Functions\"\n\nconst columns = {\n    king: [4],\n    queen: [3],\n    bishop: [2, 5],\n    knight: [1, 6],\n    rook: [0, 7],\n    pawn: [0, 1, 2, 3, 4, 5, 6, 7],\n};\n\nlet board = {};\nlet sideMap = {};\n\nconst initPieceCnt = {\n    king: 1,\n    queen: 1,\n    bishop: 2,\n    knight: 2,\n    rook: 2,\n    pawn: 8,\n}\n\nlet sideCnt = {\n    king: 1,\n    queen: 1,\n    bishop: 2,\n    knight: 2,\n    rook: 2,\n    pawn: 8,\n};\n\nlet sideCnt2 = {\n    king: 1,\n    queen: 1,\n    bishop: 2,\n    knight: 2,\n    rook: 2,\n    pawn: 8,\n};\n\nlet pieceCnt = {\n    0: sideCnt,\n    1: sideCnt2\n};\n\nexport default class System extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n        for (let side = 1; side <= 2; side++) {\n            for (let piece of Object.keys(columns)) {\n                for (let pp in columns[piece]) {\n                    let line;\n                    if (piece === \"pawn\") {\n                        line = (side === 1) ? 1 : 6;\n                    } else {\n                        line = (side === 1) ? 0 : 7;\n                    }\n                    board[[line, columns[piece][pp]]] = piece;\n                    sideMap[[line, columns[piece][pp]]] = side;\n                }\n            }\n        }\n\n        this.state = {\n            showPos: true,\n            history: lsGet(\"history\") || [],\n            complete: lsGet(\"complete\") || false,\n            winner: lsGet(\"winner\") || null,\n            turn: lsGet(\"turn\") || 2,\n            board: lsGet(\"board\") || board,\n            sideMap: lsGet(\"sideMap\") || sideMap,\n            pieceCnt: lsGet(\"pieceCnt\") || pieceCnt,\n            pawnPromoInfo: {\n                side: null,\n                row: null,\n                col: null,\n            },\n            isTimeLim: lsGet(\"whiteTime\") ? true : false,\n            whiteTime: lsGet(\"whiteTime\") || null,\n            blackTime: lsGet(\"blackTime\") || null,\n            colorMode: lsGet(\"colorMode\") || \"system\",\n            pieceStyle: lsGet(\"pieceStyle\") || \"plain\",\n        };\n\n        this.newGame = this.newGame.bind(this);\n        this.completed = this.completed.bind(this);\n        this.updateTurn = this.updateTurn.bind(this);\n\n        this.updateBoard = this.updateBoard.bind(this);\n        this.updatePieceCnt = this.updatePieceCnt.bind(this);\n        this.addPiece = this.updateAddPiece.bind(this);\n\n        this.updateShowPos = this.updateShowPos.bind(this);\n        this.updateColorMode = this.updateColorMode.bind(this);\n        this.updatePieceStyle = this.updatePieceStyle.bind(this);\n\n        this.addHistory = this.addHistory.bind(this);\n        this.timeTravel = this.timeTravel.bind(this);\n\n        this.setPawnPromotion = this.setPawnPromotion.bind(this);\n        this.pawnPromotion = this.pawnPromotion.bind(this);\n\n        this.updateIsTimeLim = this.updateIsTimeLim.bind(this);\n        this.updateTimeLim = this.updateTimeLim.bind(this);\n        this.updateTimeLeft = this.updateTimeLeft.bind(this);\n\t}\n\n    /* Game */\n\n    newGame() {\n        localStorage.clear();\n        window.location.reload();\n    }\n\n    completed(side) {\n        side = (side === 1) ? \"black\" : \"white\";\n        this.setState({\n            complete: true,\n            winner: side,\n        });\n        lsSet(\"complete\", true);\n        lsSet(\"winner\", side);\n    }\n    \n    updateTurn() {\n        let newTurn = (this.state.turn === 2) ? 1 : 2;\n        this.setState({\n            turn: newTurn,\n        });\n        lsSet(\"turn\", newTurn);\n    }\n\n    updateBoard(origx, origy, newx, newy) {\n        let flag = false, side;\n        if (this.state.board[[newx, newy]] === \"king\") {\n            flag = true;\n            side = this.state.sideMap[[origx, origy]];\n        }\n        \n        let newBoard = this.state.board;\n        newBoard[[newx, newy]] = newBoard[[origx, origy]];\n        newBoard[[origx, origy]] = null;\n\n        let newSideMap = this.state.sideMap;\n        newSideMap[[newx, newy]] = newSideMap[[origx, origy]];\n        newSideMap[[origx, origy]] = null;\n        this.setState({\n            board: newBoard,\n            sideMap: newSideMap,\n        });\n\n        lsSet(\"board\", newBoard);\n        lsSet(\"sideMap\", newSideMap);\n\n        if (flag) {\n            this.completed(side);\n        }\n\n        return flag;\n    }\n\n    updatePieceCnt(side, piece, minus = true) {\n        side--;\n        let newPieceCnt = this.state.pieceCnt;\n        if (minus)\n            newPieceCnt[side][piece]--;\n        else\n            newPieceCnt[side][piece]++;\n        this.setState({\n            pieceCnt: newPieceCnt\n        });\n        lsSet(\"pieceCnt\", newPieceCnt);\n    }\n\n    /* Settings */\n\n    openPieceCnt() {\n        const counter = document.querySelector(\".counter\");\n        if (counter.classList.contains('open-counter')) {\n            counter.classList.remove('open-counter');\n            document.querySelector(\"#input3\").checked = false;\n        } else {\n            counter.classList.add('open-counter');\n            document.querySelector(\"#input3\").checked = true;\n        }\n    }\n\n    openKeyboardControl() {\n        const keyboard = document.querySelector(\".keyboard-control\");\n        if (keyboard.classList.contains('open-keyboard')) {\n            keyboard.classList.remove('open-keyboard');\n            document.querySelector(\"#input4\").checked = false;\n        } else {\n            keyboard.classList.add('open-keyboard');\n            document.querySelector(\"#input4\").checked = true;\n        }\n    }\n\n    updateShowPos(newShowPos) {\n        this.setState({\n            showPos: newShowPos,\n        });\n    }\n\n    updateDisplayPos() {\n        if (document.body.classList.contains('open-piece-pos')) {\n            document.body.classList.remove('open-piece-pos');\n            document.querySelector(\"#input2\").checked = false;\n        } else {\n            document.body.classList.add('open-piece-pos');\n            document.querySelector(\"#input2\").checked = true;\n        }\n    }\n\n    updateColorMode(newColorMode) {\n        this.setState({\n            colorMode: newColorMode,\n        });\n        lsSet(\"colorMode\", newColorMode);\n    }\n\n    updatePieceStyle(newPieceStyle) {\n        this.setState({\n            pieceStyle: newPieceStyle,\n        });\n        lsSet(\"pieceStyle\", newPieceStyle);\n    }\n\n    /* Time Travel (History) */\n\n    updateAddPiece(name, side, row, col) {\n        let newBoard = this.state.board;\n        newBoard[[row, col]] = name;\n        let newSideMap = this.state.sideMap;\n        newSideMap[[row, col]] = side;\n        this.setState({\n            board: newBoard,\n            sideMap: newSideMap,\n        });\n        lsSet(\"board\", newBoard);\n        lsSet(\"sideMap\", newSideMap);\n    }\n\n    updateAlterPiece(name, row, col) {\n        let newBoard = this.state.board;\n        newBoard[[row, col]] = name;\n        this.setState({\n            board: newBoard,\n        });\n        lsSet(\"board\", newBoard);\n    }\n\n    addHistory(info) {\n        // info: [old piece name], [old piece side], [old piece old row]\n        // [old piece old col], [old piece new row], [old piece new col]\n        // [take over piece name], [take over piece side], [take over piece row], [take over piece col]\n        let newHistory = this.state.history;\n        newHistory.push(info);\n        this.setState({\n            history: newHistory,\n        });\n        lsSet(\"history\", newHistory);\n    }\n\n    timeTravel(index) {\n        // reverse steps (re-add eliminated pieces)\n        const hisLen = this.state.history.length;\n        let pawnPromoCnt = 0;\n        if (hisLen === 0) return;\n        if (index < 0)\n            index = hisLen + index;\n        if (index < 0)\n            return;\n        for (let i = hisLen - 1; i >= index; i--) {\n            const entry = this.state.history[i];\n            if (entry.isPawnPromotion) {\n                this.updateAlterPiece(entry.oldPieceName, entry.row, entry.col);\n                this.updatePieceCnt(entry.side, entry.oldPieceName, false);\n                this.updatePieceCnt(entry.side, entry.newPieceName);\n                pawnPromoCnt++;\n            } else {\n                let origX = entry.pieceOldRow;\n                let origY = entry.pieceOldCol;\n                let newX = entry.pieceNewRow;\n                let newY = entry.pieceNewCol;\n                this.updateBoard(newX, newY, origX, origY);\n                let tname = entry.takeOverName;\n                let tside = entry.takeOverSide;\n                let trow = entry.takeOverRow;\n                let tcol = entry.takeOverCol;\n                if (tname) {\n                    this.updateAddPiece(tname, tside, trow, tcol);\n                    this.updatePieceCnt(tside, tname, false);\n                }\n            }\n        }\n\n        // slice off unneeded history\n        let newHistory = this.state.history;\n        newHistory = newHistory.slice(0, index);\n        this.setState({\n            history: newHistory,\n        });\n        lsSet(\"history\", newHistory);\n\n        // change turn to that at the time of the current entry\n        let entryParity = (hisLen - pawnPromoCnt - index) % 2;\n        if (entryParity === 1) {\n            this.updateTurn();\n        }\n    }\n\n    /* Pawn Promotion */\n\n    setPawnPromotion(side, row, col) {\n        this.setState({\n            pawnPromoInfo: {\n                side: side,\n                row: row,\n                col: col,\n            },\n        });\n    }\n\n    pawnPromotion(pieceName) {\n        document.body.classList.remove(\"open-promo\");\n        let side = this.state.pawnPromoInfo.side;\n        let row = this.state.pawnPromoInfo.row;\n        let col = this.state.pawnPromoInfo.col;\n        let newHistory = this.state.history;\n        newHistory.push({\n            isPawnPromotion: true,\n            oldPieceName: this.state.board[[row, col]],\n            newPieceName: pieceName,\n            side: side,\n            row: row,\n            col: col,\n        });\n        this.updatePieceCnt(side, this.state.board[[row, col]]);\n        this.updatePieceCnt(side, pieceName, false);\n        this.setState({\n            history: newHistory,\n        });\n        let newBoard = this.state.board;\n        newBoard[[row, col]] = pieceName;\n        this.setState({\n            board: newBoard,\n        });\n        lsSet(\"history\", newHistory);\n        lsSet(\"board\", newBoard);\n    }\n\n    /* Set Time Limit */\n\n    updateIsTimeLim(newIsTimeLim) {\n        this.newGame();\n        this.setState({\n            isTimeLim: newIsTimeLim,\n        });\n    }\n\n    updateTimeLim(time) {\n        this.updateIsTimeLim(true);\n        this.setState({\n            blackTime: time,\n            whiteTime: time,\n        });\n        lsSet(\"blackTime\", time);\n        lsSet(\"whiteTime\", time);\n        lsSet(\"timeLimOpt\", time);\n\n        window.location.reload();\n    }\n\n    updateTimeLeft(side, time) {\n        if (side === 1) {\n            this.setState({\n                blackTime: time,\n            });\n            lsSet(\"blackTime\", time);\n        } else {\n            this.setState({\n                whiteTime: time,\n            });\n            lsSet(\"whiteTime\", time);\n        }\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<ErrorBoundary>\n\t\t\t\t<Game\n                    {...this.state}\n                    initPieceCnt={initPieceCnt}\n\n                    newGame={this.newGame}\n                    completed={this.completed}\n                    updateTurn={this.updateTurn}\n\n                    updateBoard={this.updateBoard}\n                    updatePieceCnt={this.updatePieceCnt}\n\n                    openPieceCnt={this.openPieceCnt}\n                    openKeyboardControl={this.openKeyboardControl}\n\n                    addHistory={this.addHistory}\n\n                    setPawnPromotion={this.setPawnPromotion}\n                    pawnPromotion={this.pawnPromotion}\n                    \n                    updateIsTimeLim={this.updateIsTimeLim}\n                    updateTimeLeft={this.updateTimeLeft}\n                />\n                <Setting\n                    {...this.state}\n                    openPieceCnt={this.openPieceCnt}\n                    openKeyboardControl={this.openKeyboardControl}\n                    updateShowPos={this.updateShowPos}\n                    updateDisplayPos={this.updateDisplayPos}\n                    updateColorMode={this.updateColorMode}\n                    updatePieceStyle={this.updatePieceStyle}\n                    history={this.state.history}\n                    timeTravel={this.timeTravel}\n                    updateTimeLim={this.updateTimeLim}\n                    updateIsTimeLim={this.updateIsTimeLim}\n                />\n                <Modal />\n\t\t\t</ErrorBoundary>\n\t\t);\n\t}\n}","import React from \"react\"\nimport System from \"./components/System\"\n\nexport default class App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<System />\n\t\t\t</>\n\t\t);\n\t}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/board.css';\nimport './styles/counter.css';\nimport './styles/settings.css';\nimport './styles/timer.css';\nimport './styles/utilities.css';\nimport './styles/pawn_promotion.css';\nimport './styles/switch.css';\nimport './styles/keyboard_control.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}