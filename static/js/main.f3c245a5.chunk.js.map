{"version":3,"sources":["components/pieces/Piece.js","components/pieces/King.js","components/pieces/Queen.js","components/pieces/Bishop.js","components/pieces/Knight.js","components/pieces/Rook.js","components/pieces/Pawn.js","components/pieces/Empty.js","components/Figure.js","components/Board.js","components/utilities/buttons/NewGame.js","components/utilities/Turn.js","components/Timer.js","components/utilities/Message.js","components/Counter.js","components/PawnPromotion.js","components/utilities/buttons/OpenPieceCnt.js","components/Game.js","components/settingSecs/LayoutSec.js","components/Functions.js","components/settingSecs/ColorModeSec.js","components/settingSecs/PieceStyleSec.js","components/History.js","components/settingSecs/HistorySec.js","components/settingSecs/TimeLimSec.js","components/utilities/buttons/ColorMode.js","components/utilities/buttons/Undo.js","components/utilities/buttons/OpenSetting.js","components/utilities/buttons/CloseSetting.js","components/Setting.js","components/utilities/Modal.js","components/ErrorBoundary.js","components/System.js","App.js","reportWebVitals.js","index.js"],"names":["Piece","props","handleClick","bind","handleDoubleClick","checkMove","handleUnSelect","handleSelect","handlePawnPromo","a","b","row","col","oldRow","oldCol","newRow","newCol","this","selected","includes","encode","pieceName","msg","updateSelect","updatePossiblePos","updateMsg","oldPieceName","moveInfo","isComplete","updateBoard","addHistory","updateTurn","oldSide","document","body","classList","add","console","log","setPawnPromotion","complete","selectInfo","side","turn","name","sideMap","takeOverPiece","board","takeOverSide","isPawnPromotion","pieceSide","pieceOldRow","pieceOldCol","pieceNewRow","pieceNewCol","takeOverName","takeOverRow","takeOverCol","updatePieceCnt","updateTurnStart","genPossibilities","posbt","className","onClick","onDoubleClick","React","Component","King","i","j","inRange","push","Queen","dir","Bishop","Knight","absj","Math","abs","jp","Rook","Pawn","side1","side2","Empty","Figure","error","Square","class","style","backgroundColor","boxShadow","children","Board","squares","line","classStr","showPos","possiblePos","square","completed","useRef","ref","NewGameBtn","newGame","appearance","tabIndex","aria-label","Turn","statement","gameComplete","winner","btnCont","formatTime","time","hrs","parseInt","mins","secs","hstr","mstr","sstr","TimePanel","titleSide","Timer","state","whiteTime","blackTime","isTimeLim","setInterval","tick","turnStart","updateTimeLeft","setState","Message","type","opacity","Counter","cnts","cntSet","pieceCnt","Object","keys","piece","change","initPieceCnt","tdstyle","color","fontWeight","cnt","PawnPromoPanel","pawnPromotion","id","value","htmlFor","PawnPromotion","OpenPieceCntBtn","title","openPieceCnt","Game","msgType","pos","newPossiblePos","newType","newMsg","IndSwitch","defaultChecked","onChange","e","updateShowPos","target","checked","CntSwitch","LayoutSec","lsGet","str","JSON","parse","localStorage","getItem","lsSet","obj","setItem","stringify","toTitleCase","toUpperCase","slice","ColorModeOpt","colorMode","updateMode","default","ColorModeSec","isLightDefault","isDarkDefault","isSystemDefault","updateLightMode","updateDarkMode","updateSystemMode","PieceStyleOpt","pieceStyle","updateStyle","PieceStyleSec","isPlainDefault","isFancyDefault","updatePlainStyle","updateFancyStyle","History","history","ind","entry","nentry","toString","centry","tentry","newPieceName","timeTravel","length","cursor","OpenHistory","contains","remove","HistorySec","TimeLimRadio","unit","isDefault","updateTimeLim","NoTimeLimOpt","updateIsTimeLim","TimeLimOpt","CustomTimeLimInput","handleChange","formattedVal","val","updateInput","min","minTime","max","maxTime","placeholder","react","CustomTimeLimOpt","TimeLimSec","timeLimOpt","opts","map","optData","ColorModeBtn","curMode","isLightMode","isDarkMode","isSystemMode","window","matchMedia","matches","newMode","updateColorMode","UndoBtn","disabled","OpenSettingBtn","CloseSettingBtn","Setting","cmode","updatePieceStyle","Modal","ErrorBoundary","hasError","errorInfo","columns","king","queen","bishop","knight","rook","pawn","0","1","System","pp","pawnPromoInfo","addPiece","updateAddPiece","clear","location","reload","newTurn","origx","origy","newx","newy","flag","newBoard","newSideMap","minus","newPieceCnt","counter","querySelector","newShowPos","newColorMode","newPieceStyle","info","newHistory","index","hisLen","pawnPromoCnt","updateAlterPiece","origX","origY","newX","newY","tname","tside","trow","tcol","newIsTimeLim","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3c245a5.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Piece extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleDoubleClick = this.handleDoubleClick.bind(this);\n        this.checkMove = this.checkMove.bind(this);\n        this.handleUnSelect = this.handleUnSelect.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handlePawnPromo = this.handlePawnPromo.bind(this);\n    }\n\n    encode(a, b) {\n        return a * 8 + b;\n    }\n\n    inRange(row, col) {\n        return (row >= 0 && row < 8 && col >= 0 && col < 8);\n    }\n\n    checkMove(oldRow, oldCol, newRow, newCol) {\n        const posbt = this.props.selected[3](oldRow, oldCol);\n        return posbt.includes(this.encode(newRow, newCol));\n    }\n\n    handleUnSelect(pieceName, oldRow, oldCol) {\n        let msg = `Un-selected ${pieceName} at (${oldRow}, ${oldCol})`;\n        this.props.updateSelect(null);\n        this.props.updatePossiblePos(null);\n        this.props.updateMsg(\"complete\", msg);\n    }\n\n    handleSelect(oldPieceName, oldRow, oldCol, newRow, newCol, moveInfo) {\n        let msg = `Moved ${oldPieceName} to (${newRow}, ${newCol})`;\n        this.props.updateSelect(null);\n        this.props.updateMsg(\"complete\", msg);\n        let isComplete = this.props.updateBoard(oldRow, oldCol, newRow, newCol);\n        this.props.addHistory(moveInfo);\n        this.props.updateTurn();\n\n        return isComplete;\n    }\n\n    handlePawnPromo(oldPieceName, oldSide, newRow, newCol) {\n        if (oldPieceName === \"pawn\" &&\n            ((oldSide === 1 && newRow === 7)\n          || (oldSide === 2 && newRow === 0))) {\n            document.body.classList.add(\"open-promo\");\n            console.log(\"set pawn promotion\", oldSide);\n            this.props.setPawnPromotion(oldSide, newRow, newCol);\n        }\n    }\n\n    handleClick() {\n        if (this.props.complete) return;\n        \n        let selectInfo = this.props.selected;\n        let side = this.props.side;\n        let turn = this.props.turn;\n        let newRow = this.props.row;\n        let newCol = this.props.col;\n        let pieceName = this.props.name;\n        \n        if (this.props.selected) {\n            let oldRow = selectInfo[0];\n            let oldCol = selectInfo[1];\n            let oldPieceName = selectInfo[2];\n            let oldSide = this.props.sideMap[[oldRow, oldCol]];\n\n            // Already selected piece, now selecting destination\n            if (newRow === oldRow && newCol === oldCol) {\n                // un-select piece\n                this.handleUnSelect(pieceName, oldRow, oldCol);\n            } else {\n                let takeOverPiece = this.props.board[[newRow, newCol]];\n                let takeOverSide = this.props.sideMap[[newRow, newCol]];\n    \n                let ok = this.checkMove(oldRow, oldCol, newRow, newCol);\n                if (ok) {\n                    // Move Info (for history)\n                    let moveInfo = {\n                        isPawnPromotion: false,\n                        pieceName: oldPieceName,\n                        pieceSide: oldSide,\n                        pieceOldRow: oldRow,\n                        pieceOldCol: oldCol,\n                        pieceNewRow: newRow,\n                        pieceNewCol: newCol,\n                        takeOverName: null,\n                        takeOverSide: null,\n                        takeOverRow: null,\n                        takeOverCol: null,\n                    };\n\n                    // Deal with possible piece take over\n                    if (takeOverSide && takeOverPiece) {\n                        this.props.updatePieceCnt(takeOverSide, takeOverPiece);\n                        moveInfo.takeOverName = takeOverPiece;\n                        moveInfo.takeOverSide = takeOverSide;\n                        moveInfo.takeOverRow = newRow;\n                        moveInfo.takeOverCol = newCol;\n                    }\n                    \n                    // Select piece\n                    let isComplete = this.handleSelect(oldPieceName, oldRow, oldCol, newRow, newCol, moveInfo);\n\n                    // Deal with possible pawn promotion\n                    if (!isComplete)\n                        this.handlePawnPromo(oldPieceName, oldSide, newRow, newCol);\n\n                    // Clear possible positions\n                    this.props.updatePossiblePos(null);\n                    \n                    // For Timer\n                    this.props.updateTurnStart(oldSide);\n                } else {\n                    // Warning: wrong move\n                    this.props.updateMsg(\"warning\", `Wrong move`);\n                }\n            }\n        } else {\n            if (side === turn) {\n                if (!this.props.name) return;\n                // this is 'side''s turn\n                this.props.updateSelect([newRow, newCol, pieceName, this.genPossibilities]);\n                this.props.updateMsg(\"complete\", `Selected ${pieceName} at (${newRow}, ${newCol})`);\n                const posbt = this.genPossibilities(newRow, newCol);\n                this.props.updatePossiblePos(posbt);\n            } else {\n                // this isn't 'side''s turn\n                this.props.updateMsg(\"warning\", `It's ${turn === 1 ? \"black\" : \"white\"}'s turn`);\n            }\n        }\n    }\n\n    handleDoubleClick() {\n        if (this.props.complete) return;\n\n        let side = this.props.side;\n        let turn = this.props.turn;\n        let newRow = this.props.row;\n        let newCol = this.props.col;\n        let pieceName = this.props.name;\n\n        if (side === turn) {\n            this.props.updateSelect([newRow, newCol, pieceName, this.genPossibilities]);\n            const posbt = this.genPossibilities(newRow, newCol);\n            this.props.updatePossiblePos(posbt);\n            this.props.updateMsg(\"complete\", `Selected ${this.props.name} at (${newRow}, ${newCol})`);\n        } else {\n            this.props.updateMsg(\"warning\", `It's ${this.props.turn}'s turn`);\n        }\n    }\n\n    render() {\n        let side = (this.props.side === 1) ? \"black\" : \"white\";\n\n        return (\n            <div\n                className={`figure ${side} ${this.props.name}`}\n                onClick={ this.handleClick }\n                onDoubleClick={ this.handleDoubleClick }\n            />\n        )\n    }\n}","import Piece from \"./Piece\"\n\nexport default class King extends Piece {\n    constructor(props) {\n        super(props);\n\n        this.genPossibilities = this.genPossibilities.bind(this);\n    }\n\n    genPossibilities(row, col) {\n        let posbt = [];\n        let side = this.props.sideMap[[row, col]];\n        for (let i = -1; i <= 1; i++) {\n            for (let j = -1; j <= 1; j++) {\n                if (i === 0 && j === 0) continue;\n                let newRow = row + i;\n                let newCol = col + j;\n                if (this.inRange(newRow, newCol) &&\n                    this.props.sideMap[[newRow, newCol]] !== side) {\n                    posbt.push(this.encode(newRow, newCol));\n                }\n            }\n        }\n\n        return posbt;\n    }\n}","import Piece from \"./Piece\"\n\nexport default class Queen extends Piece {\n    constructor(props) {\n        super(props);\n\n        this.genPossibilities = this.genPossibilities.bind(this);\n    }\n\n    genPossibilities(row, col) {\n        let side = this.props.sideMap[[row, col]];\n        let posbt = [];\n        const dirs1 = [[-1, 0], [1, 0], [0, -1], [0, 1]]\n        for (let dir of dirs1) {\n            for (   let i = row, j = col;\n                    this.inRange(i, j);\n                    i += dir[0], j += dir[1]  ) {\n                if (i === row && j === col)\n                    continue;\n                if (this.props.sideMap[[i, j]] === side)\n                    break;\n                posbt.push(this.encode(i, j));\n                if (this.props.sideMap[[i, j]])\n                    break;\n            }\n        }\n        const dirs2 = [[-1, -1], [-1, 1], [1, -1], [1, 1]]\n        for (let dir of dirs2) {\n            for (   let i = row, j = col;\n                    this.inRange(i, j);\n                    i += dir[0], j += dir[1]  ) {\n                if (i === row && j === col)\n                    continue;\n                if (this.props.sideMap[[i, j]] === side)\n                    break;\n                posbt.push(this.encode(i, j));\n                if (this.props.sideMap[[i, j]])\n                    break;\n            }\n        }\n\n        return posbt;\n    }\n}","import Piece from \"./Piece\"\n\nexport default class Bishop extends Piece {\n    constructor(props) {\n        super(props);\n\n        this.genPossibilities = this.genPossibilities.bind(this);\n    }\n\n    genPossibilities(row, col) {\n        const dirs = [[-1, -1], [-1, 1], [1, -1], [1, 1]]\n        let side = this.props.sideMap[[row, col]];\n        let posbt = [];\n        for (let dir of dirs) {\n            for (   let i = row, j = col;\n                    this.inRange(i, j);\n                    i += dir[0], j += dir[1]  ) {\n                if (i === row && j === col)\n                    continue;\n                if (this.props.sideMap[[i, j]] === side)\n                    break;\n                posbt.push(this.encode(i, j));\n                if (this.props.sideMap[[i, j]])\n                    break;\n            }\n        }\n\n        return posbt;\n    }\n}","import Piece from \"./Piece\"\n\nexport default class Knight extends Piece {\n    constructor(props) {\n        super(props);\n\n        this.genPossibilities = this.genPossibilities.bind(this);\n    }\n\n    genPossibilities(row, col) {\n        let side = this.props.sideMap[[row, col]];\n        let posbt = [];\n        for (let i = -2; i <= 2; i++) {\n            if (i === 0) continue;\n            let absj = 3 - Math.abs(i), j;\n            for (let jp = -1; jp <= 1; jp += 2) {\n                j = absj * jp;\n                if (j === 0) continue;\n                let newRow = row + i;\n                let newCol = col + j;\n                if (this.inRange(newRow, newCol) && this.props.sideMap[[newRow, newCol]] !== side) {\n                    posbt.push(this.encode(newRow, newCol));\n                }\n            }\n        }\n\n        return posbt;\n    }\n}","import Piece from \"./Piece\"\n\nexport default class Rook extends Piece {\n    constructor(props) {\n        super(props);\n\n        this.genPossibilities = this.genPossibilities.bind(this);\n    }\n\n    genPossibilities(row, col) {\n        let posbt = [];\n        let side = this.props.sideMap[[row, col]];\n        const dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]]\n        for (let dir of dirs) {\n            for (   let i = row, j = col;\n                    this.inRange(i, j);\n                    i += dir[0], j += dir[1]  ) {\n                if (i === row && j === col)\n                    continue;\n                if (this.props.sideMap[[i, j]] === side)\n                    break;\n                posbt.push(this.encode(i, j));\n                if (this.props.sideMap[[i, j]])\n                    break;\n            }\n        }\n\n        return posbt;\n    }\n}","import Piece from \"./Piece\"\n\nexport default class Pawn extends Piece {\n    constructor(props) {\n        super(props);\n\n        this.genPossibilities = this.genPossibilities.bind(this);\n    }\n\n    genPossibilities(row, col) {\n        let posbt = [];\n        let side = this.props.sideMap[[row, col]];\n        if (side === 1) {\n            let side1 = this.props.sideMap[[row + 1, col]];\n            let side2 = this.props.sideMap[[row + 2, col]];\n            if (row === 1) {\n                if (side1 === side) {\n                    // posbt is empty\n                } else if (side1 === 2) {\n                    posbt.push(this.encode(row + 1, col));\n                } else {\n                    posbt.push(this.encode(row + 1, col));\n                    if (side2 !== side) {\n                        posbt.push(this.encode(row + 2, col));\n                    }\n                }\n            } else {\n                if (side1 !== side) {\n                    posbt.push(this.encode(row + 1, col));\n                }\n            }\n        } else {\n            let side1 = this.props.sideMap[[row - 1, col]];\n            let side2 = this.props.sideMap[[row - 2, col]];\n            if (row === 6) {\n                if (side1 === side) {\n                    // posbt is empty\n                } else if (side1 === 1) {\n                    posbt.push(this.encode(row - 1, col));\n                } else {\n                    posbt.push(this.encode(row - 1, col));\n                    if (side2 !== side) {\n                        posbt.push(this.encode(row - 2, col));\n                    }\n                }\n            } else {\n                if (side1 !== side) {\n                    posbt.push(this.encode(row - 1, col));\n                }\n            }\n        }\n        let i = (side === 1) ? 1 : -1;\n        for (let j = -1; j <= 1; j += 2) {\n            let newRow = row + i;\n            let newCol = col + j;\n            if (this.inRange(newRow, newCol) &&\n                this.props.sideMap[[newRow, newCol]] === 3 - side) {\n                posbt.push(this.encode(newRow, newCol));\n            }\n        }\n\n        return posbt;\n    }\n}","import Piece from \"./Piece\"\n\nexport default class Empty extends Piece {\n}","import React from \"react\"\nimport King from \"./pieces/King\"\nimport Queen from \"./pieces/Queen\"\nimport Bishop from \"./pieces/Bishop\"\nimport Knight from \"./pieces/Knight\"\nimport Rook from \"./pieces/Rook\"\nimport Pawn from \"./pieces/Pawn\"\nimport Empty from \"./pieces/Empty\"\n\nexport default class Figure extends React.Component {\n    render() {\n        if (this.props.name) {\n            let name = this.props.name;\n            if (name === 'king')\n                return <King {...this.props} />\n            else if (name === 'queen')\n                return <Queen {...this.props} />\n            else if (name === 'bishop')\n                return <Bishop {...this.props} />\n            else if (name === 'knight')\n                return <Knight {...this.props} />\n            else if (name === 'rook')\n                return <Rook {...this.props} />\n            else if (name === 'pawn')\n                return <Pawn {...this.props} />\n            else\n                console.error(\"Unknown piece\");\n        } else {\n            return <Empty {...this.props} />;\n        }\n    }\n}","import React, { useRef } from \"react\"\nimport Figure from \"./Figure\"\n\nfunction Square(props) {\n    return (\n        <td\n            className={`square ${props.class}`}\n            style={{\n                backgroundColor: props.backgroundColor,\n                boxShadow: props.boxShadow,\n            }}\n        >\n            {props.children}\n        </td>\n    )\n}\n\nexport default function Board(props) {\n    let squares = [];\n    for (let i = 0; i < 8; i++) {\n        let line = [];\n        for (let j = 0; j < 8; j++) {\n            let classStr = \"\";\n            let oldRow = -1, oldCol = -1;\n            if (props.selected) {\n                oldRow = props.selected[0];\n                oldCol = props.selected[1];\n            }\n            if ((props.selected && oldRow === i && oldCol === j)) {\n                classStr = \"selected\";\n            } else if (oldRow > -1 && oldCol > -1 && props.showPos && props.possiblePos && props.possiblePos.includes(i * 8 + j)) {\n                classStr = `indicate ${props.sideMap[[oldRow, oldCol]] === 1 ? \"black\" : \"white\"} ${props.selected[2]}`;\n            }\n            let square = (\n                <Square\n                    key={i * 8 + j}\n                    class={classStr}\n                >\n                    <Figure\n                        turn={props.turn}\n                        side={props.sideMap[[i, j]]}\n                        name={props.board[[i, j]]}\n                        row={i}\n                        col={j}\n                        board={props.board}\n                        sideMap={props.sideMap}\n                        selected={props.selected}\n                        complete={props.complete}\n                        completed={props.completed}\n        \n                        updateTurn={props.updateTurn}\n                        updateSelect={props.updateSelect}\n                        updateBoard={props.updateBoard}\n                        updatePieceCnt={props.updatePieceCnt}\n                        updatePossiblePos={props.updatePossiblePos}\n                        updateMsg={props.updateMsg}\n                        updateTurnStart={props.updateTurnStart}\n        \n                        setPawnPromotion={props.setPawnPromotion}\n                        addHistory={props.addHistory}\n                    />\n                </Square>\n            )\n            line.push(square);\n        }\n        squares.push(\n            <tr className=\"line\" key={i}>\n                { line }\n            </tr>\n        )\n    }\n    const board = useRef(null);\n    return (\n        <table className=\"board\" ref={board}>\n            <tbody>\n                { squares }\n            </tbody>\n        </table>\n    )\n}","export default function NewGameBtn(props) {\n    return (\n        <button\n            className=\"newGame ripple-effect\"\n            onClick={props.newGame}\n            style={{ appearance: \"none\" }}\n            tabIndex=\"0\"\n            aria-label=\"reset game / new game\"\n        >\n            {props.children}\n        </button>\n    )\n}","import React from \"react\"\nimport NewGameBtn from \"./buttons/NewGame\"\n\nexport default function Turn(props) {\n    let statement = (\n        (!props.gameComplete)\n        ? `${props.turn === 1 ? \"black\" : \"white\"} to move`\n        : `${props.winner} wins`\n    );\n    let btnCont = (\n        (!props.gameComplete)\n        ? \"reset game\"\n        : \"new game\"\n    );\n\n    return (\n        <span className=\"turn-statement\">\n            {statement}\n            <NewGameBtn\n                newGame={props.newGame}\n            >\n                {btnCont}\n            </NewGameBtn>\n        </span>\n    )\n}","import React from \"react\"\n\nfunction formatTime(time) {\n    let hrs = parseInt(time / 3600);\n    let mins = parseInt(time % 3600 / 60);\n    let secs = time % 3600 % 60;\n\n    let hstr = (hrs > 0) ? hrs + \":\" : \"\";\n    let mstr = (mins >= 10) ? mins : `0${mins}`;\n    let sstr = (secs >= 10) ? secs : `0${secs}`;\n\n    let res = `${hstr}${mstr}:${sstr}`;\n\n    return res;\n}\n\nfunction TimePanel(props) {\n    let titleSide = props.side === \"white\" ? \"White\" : \"Black\";\n    return (\n        <div\n            className={`timePanel timePanel${titleSide}`}\n        >\n            <div className=\"timePanelColor\" />\n            <div className=\"timeLeft\">\n                {formatTime(props.time)}\n            </div>\n        </div>\n    )\n}\n\nexport default class Timer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            whiteTime: props.whiteTime,\n            blackTime: props.blackTime,\n        }\n\n        if (this.props.isTimeLim) {\n            setInterval(\n                () => this.tick(this.props.turnStart),\n            1000);\n        }\n\n        this.props.updateTimeLeft(1, this.props.whiteTime);\n        this.props.updateTimeLeft(2, this.props.blackTime);\n\n        this.tick = this.tick.bind(this);\n    }\n\n    tick(side) {\n        if (!side || this.props.gameComplete) return;\n        if (side === 1) {\n            this.setState((state) => {\n                    if (state.whiteTime > 0) {\n                        return {\n                            whiteTime: state.whiteTime - 1\n                        }\n                    } else {\n                        this.props.completed(1);\n                    }\n                }\n            );\n        } else {\n            this.setState((state) => {\n                    if (state.blackTime > 0) {\n                        return {\n                            blackTime: state.blackTime - 1\n                        }\n                    } else {\n                        this.props.completed(2);\n                    }\n                }\n            );\n        }\n    }\n\n    render() {\n        if (this.props.isTimeLim) {\n            return (\n                <div className=\"timer\">\n                    <TimePanel\n                        side=\"white\"\n                        time={this.state.whiteTime}\n                        tick={this.tick}\n                        turnStart={this.props.turnStart}\n                    />\n                    <TimePanel\n                        side=\"black\"\n                        time={this.state.blackTime}\n                        tick={this.tick}\n                        turnStart={this.props.turnStart}\n                    />\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}","import React from \"react\"\n\nexport default class Message extends React.Component {\n    render() {\n        if (this.props.msg) {\n            return (\n                <div\n                    className={`msg ${this.props.type}`}\n                    style={{opacity: 1}}\n                >\n                    <span>{this.props.msg}</span>\n                </div>\n            )\n        } else {\n            return (\n                <div\n                    className={`msg`}\n                    style={{opacity: 0}}\n                >\n                    <span>{this.props.msg}</span>\n                </div>\n            )\n        }\n    }\n}","import React from \"react\"\n\nexport default class Counter extends React.Component {\n    render() {\n        let cnts = [], j = 0;\n        for (let i = 0; i < 2; i++) {\n            let side = (i === 0) ? \"black\" : \"white\";\n            let cntSet = this.props.pieceCnt[i];\n            for (let piece of Object.keys(cntSet)) {\n                let change = cntSet[piece] - this.props.initPieceCnt[piece];\n                let ccolor = (change >= 0) ? 'var(--deep-sky-blue)' : 'gray';\n                const tdstyle = {\n                    color: ccolor,\n                    fontWeight: \"bold\"\n                }\n                let cnt = (\n                    <tr key={i * 2 + j}>\n                        <td>{side}</td>\n                        <td>{piece}</td>\n                        <td>{cntSet[piece]}</td>\n                        <td style={tdstyle}>{change}</td>\n                    </tr>\n                );\n                cnts.push(cnt);\n                j++;\n            }\n        }\n        return (\n            <table className=\"counter\">\n                <thead>\n                    <tr>\n                        <th>Side</th>\n                        <th>Piece name</th>\n                        <th>Count</th>\n                        <th>Change</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {cnts}\n                </tbody>\n            </table>\n        )\n    }\n}","function PawnPromoPanel(props) {\n    return (\n        <div\n            className=\"promo-opt\"\n            onClick={() => props.pawnPromotion(props.name)}\n        >\n            <input\n                type=\"radio\"\n                id={`promo ${props.name}`}\n                name=\"promo type\"\n                value={`${props.name}`}\n            />\n            <label\n                htmlFor={`promo ${props.name}`}\n            >\n                {props.name}\n            </label>\n        </div>\n    )\n}\n\nexport default function PawnPromotion(props) {\n    return (\n        <div className=\"pawn_promo\">\n            <span>Congratulations! Your pawn has reached the end!</span>\n            <br />\n            <span>Promote your pawn to one of the following --</span>\n            <div className=\"promo_opts\">\n                <PawnPromoPanel\n                    key={0}\n                    name=\"queen\"\n                    pawnPromotion={props.pawnPromotion}\n                />\n                <PawnPromoPanel\n                    key={1}\n                    name=\"knight\"\n                    pawnPromotion={props.pawnPromotion}\n                />\n                <PawnPromoPanel\n                    key={2}\n                    name=\"bishop\"\n                    pawnPromotion={props.pawnPromotion}\n                />\n                <PawnPromoPanel\n                    key={3}\n                    name=\"rook\"\n                    pawnPromotion={props.pawnPromotion}\n                />\n            </div>\n        </div>\n    )\n}","export default function OpenPieceCntBtn(props) {\n    return (\n        <button\n            className=\"btn more ripple-effect\"\n            title=\"piece count\"\n            aria-label=\"open piece count\"\n            onClick={props.openPieceCnt}\n            tabIndex=\"0\"\n        />\n    )\n}\n","import React from \"react\"\nimport Board from \"./Board\"\nimport Turn from \"./utilities/Turn\"\nimport Timer from \"./Timer\"\nimport Message from \"./utilities/Message\"\nimport Counter from \"./Counter\"\nimport PawnPromotion from \"./PawnPromotion\"\nimport OpenPieceCntBtn from \"./utilities/buttons/OpenPieceCnt\"\n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            side: props.side,\n            color: props.color,\n            selected: null,\n            turnStart: null,\n            msg: null,\n            msgType: null,\n            possiblePos: [],\n        };\n        \n        this.updateSelect = this.updateSelect.bind(this);\n        this.updateTurnStart = this.updateTurnStart.bind(this);\n        this.updatePossiblePos = this.updatePossiblePos.bind(this);\n        this.updateMsg = this.updateMsg.bind(this);\n    }\n\n    updateSelect(pos) {\n        this.setState({\n            selected: pos,\n        });\n    }\n\n    updateTurnStart(side) {\n        this.setState({\n            turnStart: side,\n        });\n    }\n\n    updatePossiblePos(newPossiblePos) {\n        this.setState({\n            possiblePos: newPossiblePos\n        });\n    }\n\n    updateMsg(newType, newMsg) {\n        this.setState({\n            msgType: newType,\n            msg: newMsg,\n        });\n    }\n    \n    render() {\n        return (\n            <>\n                <Turn\n                    gameComplete={this.props.complete}\n                    winner={this.props.winner}\n                    turn={this.props.turn}\n                    newGame={this.props.newGame}\n                />\n                <Timer\n                    gameComplete={this.props.complete}\n                    isTimeLim={this.props.isTimeLim}\n                    whiteTime={this.props.whiteTime}\n                    blackTime={this.props.blackTime}\n                    turnStart={this.state.turnStart}\n                    completed={this.props.completed}\n                    updateTimeLeft={this.props.updateTimeLeft}\n                />\n                <Board\n                    {...this.state}\n                    turn={this.props.turn}\n                    board={this.props.board}\n                    sideMap={this.props.sideMap}\n                    showPos={this.props.showPos}\n                    addHistory={this.props.addHistory}\n\n                    complete={this.props.complete}\n                    updateTurn={this.props.updateTurn}\n                    updateSelect={this.updateSelect}\n                    updateBoard={this.props.updateBoard}\n                    updatePieceCnt={this.props.updatePieceCnt}\n                    updatePossiblePos={this.updatePossiblePos}\n                    updateMsg={this.updateMsg}\n                    updateTurnStart={this.updateTurnStart}\n                    setPawnPromotion={this.props.setPawnPromotion}\n                />\n                <Message\n                    type={this.state.msgType}\n                    msg={this.state.msg}\n                />\n                <div className=\"countCont\">\n                    <OpenPieceCntBtn\n                        openPieceCnt={this.props.openPieceCnt}\n                    />\n                    <Counter\n                        pieceCnt={this.props.pieceCnt}\n                        initPieceCnt={this.props.initPieceCnt}\n                    />\n                </div>\n                <PawnPromotion\n                    pawnPromotion={this.props.pawnPromotion}\n                />\n            </>\n        );\n    }\n}","function IndSwitch(props) {\n    return (\n        <label className=\"switch\">\n            <input type=\"checkbox\" defaultChecked\n                onChange={\n                    (e) => {\n                        props.updateShowPos(e.target.checked);\n                    }\n                }\n                tabIndex=\"0\"\n            />\n            <span className=\"slider round\"></span>\n        </label>\n    )\n}\n\nfunction CntSwitch(props) {\n    return (\n        <label className=\"switch\">\n            <input type=\"checkbox\" id=\"input2\"\n                onChange={\n                    (e) => {\n                        props.openPieceCnt();\n                    }\n                }\n                tabIndex=\"0\"\n            />\n            <span className=\"slider round\"></span>\n        </label>\n    )\n}\n\nexport default function LayoutSec(props) {\n    return (\n        <div>\n            <div className=\"setting switchSet\">\n                <span>Indicate possible positions for piece movement</span>\n                <IndSwitch\n                    updateShowPos={props.updateShowPos}\n                />\n            </div>\n            <div className=\"setting switchSet\">\n                <span>Open table of piece count for black and white sides</span>\n                <CntSwitch\n                    openPieceCnt={props.openPieceCnt}\n                />\n            </div>\n        </div>\n    )\n}","export function lsGet(str) {\n    return JSON.parse(localStorage.getItem(str));\n}\n\nexport function lsSet(str, obj) {\n    localStorage.setItem(str, JSON.stringify(obj));\n}\n\nexport function toTitleCase(str) {\n    return str[0].toUpperCase() + str.slice(1);\n}","import {toTitleCase} from \"./../Functions\"\n\nfunction ColorModeOpt(props) {\n    return (\n        <div className=\"ripple-effect\">\n            <input\n                type=\"radio\"\n                id={`${props.colorMode}_mode`}\n                name=\"mode\"\n                onChange={props.updateMode}\n                tabIndex=\"0\"\n                defaultChecked={props.default === true}\n            />\n            <label\n                htmlFor={`${props.colorMode}_mode`}\n            >\n                {toTitleCase(props.colorMode)} Mode\n            </label>\n        </div>\n    )\n}\n\nexport default function ColorModeSec(props) {\n    let isLightDefault = props.colorMode === \"light\";\n    let isDarkDefault = props.colorMode === \"dark\";\n    let isSystemDefault = props.colorMode === \"system\";\n\n    return (\n        <div className=\"setting modeSet\">\n            <span>Choose color mode</span>\n            <ColorModeOpt\n                colorMode=\"light\"\n                updateMode={props.updateLightMode}\n                default={isLightDefault}\n            />\n            <ColorModeOpt\n                colorMode=\"dark\"\n                updateMode={props.updateDarkMode}\n                default={isDarkDefault}\n            />\n            <ColorModeOpt\n                colorMode=\"system\"\n                updateMode={props.updateSystemMode}\n                default={isSystemDefault}\n            />\n        </div>\n    )\n}","import {toTitleCase} from \"./../Functions\"\n\nfunction PieceStyleOpt(props) {\n    return (\n        <div className=\"ripple-effect\">\n            <input\n                type=\"radio\"\n                id={`${props.pieceStyle}_style`}\n                name=\"style\"\n                onChange={props.updateStyle}\n                tabIndex=\"0\"\n                defaultChecked={props.default === true}\n            />\n            <label\n                htmlFor={`${props.pieceStyle}_style`}\n            >\n                {toTitleCase(props.pieceStyle)} Style Chess Pieces\n            </label>\n        </div>\n    )\n}\n\nexport default function PieceStyleSec(props) {\n    let isPlainDefault = props.pieceStyle === \"plain\";\n    let isFancyDefault = props.pieceStyle === \"fancy\";\n\n    return (\n        <div className=\"setting pieceSet\">\n            <span>Choose chess piece style</span>\n            <PieceStyleOpt\n                pieceStyle=\"plain\"\n                updateStyle={props.updatePlainStyle}\n                default={isPlainDefault}\n            />\n            <PieceStyleOpt\n                pieceStyle=\"fancy\"\n                updateStyle={props.updateFancyStyle}\n                default={isFancyDefault}\n            />\n        </div>\n    )\n}","export default function History(props) {\n    const history = [];\n    for (let ind in props.history) {\n        let entry = props.history[ind];\n        if (entry.isPawnPromotion)\n            continue;\n        let nentry = -1;\n        if (props.history) nentry = props.history[(parseInt(ind) + 1).toString(10)];\n        let centry = `Move ${entry.pieceSide === 1 ? \"black\" : \"white\"} ${entry.pieceName}\\\n         from (${entry.pieceOldRow}, ${entry.pieceOldCol})\\\n         to (${entry.pieceNewRow}, ${entry.pieceNewCol})`;\n        let tentry = \"\";\n        if (entry.takeOverName) {\n            tentry = ` , take over ${entry.takeOverSide === 1 ? \"black\" : \"white\"} ${entry.takeOverName}`;\n        }\n        centry += tentry;\n        if (nentry && nentry.isPawnPromotion) {\n            centry += `, promote ${nentry.pieceSide === 1 ? \"black\" : \"white\"}  pawn\\\n            at (${nentry.row}, ${nentry.col}) to ${nentry.newPieceName}`;\n        }\n        history.push(\n            <li\n                key={ind}\n                onClick={() => props.timeTravel(ind)}\n                className=\"ripple-effect\"\n            >{centry}\n            </li>\n        );\n    }\n    if (history.length === 0) {\n        history.push(\n            <li key={0} style={{cursor: \"text\"}}>History is empty</li>\n        );\n    }\n    return (\n        <ol className=\"history\">\n            {history}\n        </ol>\n    );\n}","import History from \"./../History\"\n\nfunction OpenHistory() {\n    return (\n        <span\n            onClick={\n                (e) => {\n                    if (e.target.classList.contains(\"hist-open\"))\n                        e.target.classList.remove(\"hist-open\");\n                    else\n                        e.target.classList.add(\"hist-open\");\n                }\n            }\n            tabIndex=\"0\"\n        >Open history and time travel\n        </span>\n    )\n}\n\nexport default function HistorySec(props) {\n    return (\n        <div className=\"setting extSet\">\n            <OpenHistory />\n            <div className=\"hist-ext\">\n                <span className=\"info\">Info: Click on entry to reverse step and newer (following) steps</span>\n                <History\n                    history={props.history}\n                    timeTravel={props.timeTravel}\n                />\n            </div>\n        </div>\n    )\n}","import react from \"react\"\nimport {lsGet} from \"./../Functions\"\n\nfunction timeToSecs(time, unit) {\n    if (unit === \"hour\") {\n        return time * 3600;\n    } else if (unit === \"minute\") {\n        return time * 60;\n    } else if (unit === \"second\") {\n        return time;\n    }\n\n    return null;\n}\n\nfunction TimeLimRadio(props) {\n    let secs = timeToSecs(props.time, props.unit);\n    return (\n        <input\n            type=\"radio\"\n            id={props.id}\n            name=\"time\"\n            tabIndex=\"0\"\n            defaultChecked={props.isDefault}\n            onChange={() => {\n                if (props.id === \"no_time_lim\") {\n                    props.updateTimeLim(false);\n                } else {\n                    props.updateTimeLim(secs);\n                }\n            }}\n        />\n    )\n}\n\nfunction NoTimeLimOpt(props) {\n    return (\n        <div className=\"ripple-effect\">\n            <TimeLimRadio\n                id={`no_time_lim`}\n                isDefault={false}\n                updateTimeLim={props.updateIsTimeLim}\n            />\n            <label htmlFor={`no_time_lim`}>\n                None\n            </label>\n        </div>\n    )\n}\n\nfunction TimeLimOpt(props) {\n    return (\n        <div className=\"ripple-effect\">\n            <TimeLimRadio\n                id={`${props.time}_${props.unit}`}\n                time={props.time}\n                unit={props.unit}\n                isDefault={props.isDefault}\n                updateTimeLim={props.updateTimeLim}\n            />\n            <label htmlFor={`${props.time}_${props.unit}`}>\n                {props.time} {props.unit}{props.time > 1 ? 's' : ''}\n            </label>\n        </div>\n    )\n}\n\nclass CustomTimeLimInput extends react.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            value: \"\",\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        let val = e.target.value, formattedVal;\n        if (this.state.value.length > 1) {\n            formattedVal = val.slice(val.length - 2, val.length);\n            this.setState({\n                value: formattedVal,\n            });\n            this.props.updateInput(this.props.unit, formattedVal);\n        } else {\n            formattedVal = (val.length === 1) ? \"0\" + val : val;\n            this.setState({\n                value: formattedVal,\n            });\n            this.props.updateInput(this.props.unit, formattedVal);\n        }\n        if (formattedVal.length < 2) {\n            formattedVal = \"0\" + val;\n            this.setState({\n                value: formattedVal,\n            });\n            this.props.updateInput(this.props.unit, formattedVal);\n        }\n    }\n\n    render() {\n        return (\n            <input\n                type=\"number\"\n                min={this.props.minTime}\n                max={this.props.maxTime}\n                name={this.props.unit}\n                id={this.props.unit}\n                aria-label={this.props.unit}\n\n                placeholder=\"00\"\n                value={this.state.value}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n\nclass CustomTimeLimOpt extends react.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hrs: 0,\n            mins: 0,\n            secs: 0,\n        }\n\n        this.updateInput = this.updateInput.bind(this);\n    }\n\n    updateInput(unit, value) {\n        value = parseInt(value);\n        if (unit === \"hour\") {\n            this.setState({\n                hrs: value,\n            })\n        } else if (unit === \"minute\") {\n            this.setState({\n                mins: value,\n            })\n        } else if (unit === \"second\") {\n            this.setState({\n                secs: value,\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"custom-time-opt ripple-effect\">\n                <TimeLimRadio\n                    id=\"custom_time\"\n                    time={\n                        parseInt(this.state.hrs) * 3600\n                        + parseInt(this.state.mins) * 60\n                        + parseInt(this.state.secs)\n                    }\n                    unit=\"second\"\n                    updateTimeLim={this.props.updateTimeLim}\n                />\n                <label\n                    htmlFor=\"custom_time\"\n                    className=\"custom-time-wrapper\"\n                >\n                    <label htmlFor=\"cust\">Enter custom time limit: </label>\n                    <br />\n                    <div className=\"time_input\">\n                        <CustomTimeLimInput\n                            minTime=\"0\"\n                            maxTime=\"10\"\n                            unit=\"hour\"\n                            updateInput={this.updateInput}\n                        />\n                        <span className=\"time_colon\">:</span>\n                        <CustomTimeLimInput\n                            minTime=\"0\"\n                            maxTime=\"59\"\n                            unit=\"minute\"\n                            updateInput={this.updateInput}\n                        />\n                        <span className=\"time_colon\">:</span>\n                        <CustomTimeLimInput\n                            minTime=\"0\"\n                            maxTime=\"59\"\n                            unit=\"second\"\n                            updateInput={this.updateInput}\n                        />\n                    </div>\n                </label>\n            </div>\n        )\n    }\n}\n\nexport default function TimeLimSec(props) {\n    let timeLimOpt = lsGet(\"timeLimOpt\") || -1;\n\n    const optDatas = [\n        [5, \"minute\"],\n        [10, \"minute\"],\n        [15, \"minute\"],\n        [30, \"minute\"],\n        [45, \"minute\"],\n        [1, \"hour\"],\n        [1.5, \"hour\"],\n        [2, \"hour\"],\n    ];\n\n    let opts = optDatas.map((optData, i) => {\n        let secs = optData[0] * (optData[1] === \"minute\" ? 60 : 3600);\n        return (\n            <TimeLimOpt\n                key={i}\n                time={optData[0]}\n                unit={optData[1]}\n                isDefault={timeLimOpt === secs}\n                updateTimeLim={props.updateTimeLim}\n            />\n        )\n    });\n\n    return (\n        <div className=\"setting timeSet\">\n            <span>Choose time limit</span>\n            <NoTimeLimOpt\n                updateIsTimeLim={props.updateIsTimeLim}\n            />\n            {opts}\n            <CustomTimeLimOpt\n                updateTimeLim={props.updateTimeLim}\n            />\n        </div>\n    )\n}","export default function ColorModeBtn(props) {\n    let isLightMode = document.body.classList.contains(\"light-mode\");\n    let isDarkMode = document.body.classList.contains(\"dark-mode\");\n    let isSystemMode = document.body.classList.contains(\"system-mode\");\n\n    let curMode;\n    if (isLightMode) {\n        curMode = \"light\";\n    } else if (isDarkMode) {\n        curMode = \"dark\";\n    } else if (isSystemMode) {\n        if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n            curMode = \"dark\";\n        } else {\n            curMode = \"light\";\n        }\n    }\n    let newMode = (curMode === \"light\") ? \"dark\" : \"light\";\n\n    return (\n        <button\n            className={`btn colorMode ${newMode}Mode ripple-effect`}\n            title={`to ${newMode} mode`}\n            onClick={\n                () => {\n                    if (newMode === \"light\") {\n                        props.updateLightMode();\n                        props.updateColorMode(\"light\");\n                    } else {\n                        props.updateDarkMode();\n                        props.updateColorMode(\"dark\");\n                    }\n                }\n            }\n            tabIndex=\"0\"\n            aria-label={`switch to ${newMode} mode`}\n        />\n    )\n}","export default function UndoBtn(props) {\n    const history = props.history;\n    return (\n        <button\n            className=\"btn reverseOne ripple-effect\"\n            title=\"undo\"\n            onClick={() => {\n                if (history[history.length - 1].isPawnPromotion)\n                    props.timeTravel(-2)\n                else\n                    props.timeTravel(-1)\n            }}\n            disabled={history.length === 0}\n            tabIndex=\"0\"\n            aria-label=\"undo one step\"\n        />\n    )\n}","export default function OpenSettingBtn() {\n    return (\n        <button\n            className=\"btn setSetting ripple-effect\"\n            title=\"setting\"\n            onClick={\n                function () {\n                    const body = document.body;\n                    if (body.classList.contains('open-setting'))\n                        body.classList.remove('open-setting');\n                    else\n                        body.classList.add('open-setting');\n                }\n            }\n            tabIndex=\"0\"\n            aria-label=\"set settings\"\n        />\n    )\n}\n","export default function CloseSettingBtn() {\n    return (\n        <button\n            className=\"btn closeSetting ripple-effect\"\n            title=\"close\"\n            onClick={\n                () => {\n                    document.body.classList.remove(\"open-setting\")\n                }\n            }\n            tabIndex=\"0\"\n            aria-label=\"close settings\"\n        />\n    )\n}","import React from \"react\"\nimport LayoutSec from \"./settingSecs/LayoutSec\";\nimport ColorModeSec from \"./settingSecs/ColorModeSec\";\nimport PieceStyleSec from \"./settingSecs/PieceStyleSec\";\nimport HistorySec from \"./settingSecs/HistorySec\";\nimport TimeLimSec from \"./settingSecs/TimeLimSec\";\nimport ColorModeBtn from \"./utilities/buttons/ColorMode\";\nimport UndoBtn from \"./utilities/buttons/Undo\";\nimport OpenSettingBtn from \"./utilities/buttons/OpenSetting\";\nimport CloseSettingBtn from \"./utilities/buttons/CloseSetting\";\n\nexport default class Setting extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        \n        this.updateLightMode = this.updateLightMode.bind(this);\n        this.updateDarkMode = this.updateDarkMode.bind(this);\n        this.updateSystemMode = this.updateSystemMode.bind(this);\n\n        this.updatePlainStyle = this.updatePlainStyle.bind(this);\n        this.updateFancyStyle = this.updateFancyStyle.bind(this);\n    }\n\n    componentDidMount() {\n        let pstyle = this.props.pieceStyle;\n        if (pstyle === \"plain\") {\n            this.updatePlainStyle();\n        } else {\n            this.updateFancyStyle();\n        }\n        \n        let cmode = this.props.colorMode;\n        if (cmode === \"light\") {\n            this.updateLightMode();\n        } else if (cmode === \"dark\") {\n            this.updateDarkMode();\n        } else {\n            this.updateSystemMode();\n        }\n    }\n\n    updateLightMode() {\n        if (document.body.classList.contains(\"dark-mode\"))\n            document.body.classList.remove(\"dark-mode\");\n        document.body.classList.add(\"light-mode\");\n        this.props.updateColorMode(\"light\");\n    }\n\n    updateDarkMode() {\n        if (document.body.classList.contains(\"light-mode\"))\n            document.body.classList.remove(\"light-mode\");\n        document.body.classList.add(\"dark-mode\");\n        this.props.updateColorMode(\"dark\");\n    }\n\n    updateSystemMode() {\n        if (document.body.classList.contains(\"light-mode\"))\n            document.body.classList.remove(\"light-mode\");\n        else if (document.body.classList.contains(\"dark-mode\"))\n            document.body.classList.remove(\"dark-mode\");\n        this.props.updateColorMode(\"system\");\n    }\n\n    updatePlainStyle() {\n        if (document.body.classList.contains(\"fancy-style\"))\n            document.body.classList.remove(\"fancy-style\");\n        document.body.classList.add(\"plain-style\");\n        this.props.updatePieceStyle(\"plain\");\n    }\n\n    updateFancyStyle() {\n        if (document.body.classList.contains(\"plain-style\"))\n            document.body.classList.remove(\"plain-style\");\n        document.body.classList.add(\"fancy-style\");\n        this.props.updatePieceStyle(\"fancy\");\n    }\n\n\trender() {\n        return (\n            <>\n                <ColorModeBtn\n                    updateColorMode={this.props.updateColorMode}\n                    updateLightMode={this.updateLightMode}\n                    updateDarkMode={this.updateDarkMode}\n                />\n                <UndoBtn\n                    history={this.props.history}\n                    timeTravel={this.props.timeTravel}\n                />\n                <OpenSettingBtn />\n                <div className=\"settings\">\n                    <h1>SETTINGS</h1>\n                    <section>\n                        <h2>Appearance</h2>\n                        <LayoutSec\n                            updateShowPos={this.props.updateShowPos}\n                            openPieceCnt={this.props.openPieceCnt}\n                        />\n                    </section>\n                    <hr />\n                    <section>\n                        <h2>Color Mode</h2>\n                        <ColorModeSec\n                            key={this.props.colorMode}\n                            colorMode={this.props.colorMode}\n                            updateLightMode={this.updateLightMode}\n                            updateDarkMode={this.updateDarkMode}\n                            updateSystemMode={this.updateSystemMode}\n                        />\n                    </section>\n                    <hr />\n                    <section>\n                        <h2>Chess Piece Style</h2>\n                        <PieceStyleSec\n                            pieceStyle={this.props.pieceStyle}\n                            updatePlainStyle={this.updatePlainStyle}\n                            updateFancyStyle={this.updateFancyStyle}\n                        />\n                    </section>\n                    <hr />\n                    <section>\n                        <h2>History</h2>\n                        <HistorySec\n                            history={this.props.history}\n                            timeTravel={this.props.timeTravel}\n                        />\n                    </section>\n                    <hr />\n                    <section>\n                        <h2>Time Limit</h2>\n                        <TimeLimSec\n                            updateIsTimeLim={this.props.updateIsTimeLim}\n                            updateTimeLim={this.props.updateTimeLim}\n                        />\n                    </section>\n                    <CloseSettingBtn />\n                </div>\n            </>\n        );\n    }\n}","export default function Modal() {\n    return (\n        <div className=\"modal\"\n            onClick={\n                function () {\n                    const body = document.body;\n                    body.classList.remove('open-setting');\n                    body.classList.remove('open-promo');\n                }\n            }\n        />\n    );\n}","import React from \"react\"\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {\n            hasError: true\n        };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.error(error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className=\"errorBoundary\">\n                    <div className=\"errorPic\"></div>\n                    <h1>Sorry, something went wrong.</h1>\n                </div>\n            );\n        }\n        return this.props.children;\n    }\n}","import React from \"react\"\nimport Game from \"./Game\"\nimport Setting from \"./Setting\"\nimport Modal from \"./utilities/Modal\";\nimport ErrorBoundary from \"./ErrorBoundary\"\nimport {lsGet, lsSet} from \"./Functions\"\n\nconst columns = {\n    king: [4],\n    queen: [3],\n    bishop: [2, 5],\n    knight: [1, 6],\n    rook: [0, 7],\n    pawn: [0, 1, 2, 3, 4, 5, 6, 7],\n};\n\nlet board = {};\nlet sideMap = {};\n\nconst initPieceCnt = {\n    king: 1,\n    queen: 1,\n    bishop: 2,\n    knight: 2,\n    rook: 2,\n    pawn: 8,\n}\n\nlet sideCnt = {\n    king: 1,\n    queen: 1,\n    bishop: 2,\n    knight: 2,\n    rook: 2,\n    pawn: 8,\n};\n\nlet sideCnt2 = {\n    king: 1,\n    queen: 1,\n    bishop: 2,\n    knight: 2,\n    rook: 2,\n    pawn: 8,\n};\n\nlet pieceCnt = {\n    0: sideCnt,\n    1: sideCnt2\n};\n\nexport default class System extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n        for (let side = 1; side <= 2; side++) {\n            for (let piece of Object.keys(columns)) {\n                for (let pp in columns[piece]) {\n                    let line;\n                    if (piece === \"pawn\") {\n                        line = (side === 1) ? 1 : 6;\n                    } else {\n                        line = (side === 1) ? 0 : 7;\n                    }\n                    board[[line, columns[piece][pp]]] = piece;\n                    sideMap[[line, columns[piece][pp]]] = side;\n                }\n            }\n        }\n\n        this.state = {\n            showPos: true,\n            history: lsGet(\"history\") || [],\n            complete: lsGet(\"complete\") || false,\n            winner: lsGet(\"winner\") || null,\n            turn: lsGet(\"turn\") || 2,\n            board: lsGet(\"board\") || board,\n            sideMap: lsGet(\"sideMap\") || sideMap,\n            pieceCnt: lsGet(\"pieceCnt\") || pieceCnt,\n            pawnPromoInfo: {\n                side: null,\n                row: null,\n                col: null,\n            },\n            isTimeLim: lsGet(\"whiteTime\") ? true : false,\n            whiteTime: lsGet(\"whiteTime\") || null,\n            blackTime: lsGet(\"blackTime\") || null,\n            colorMode: lsGet(\"colorMode\") || \"system\",\n            pieceStyle: lsGet(\"pieceStyle\") || \"plain\",\n        };\n\n        this.newGame = this.newGame.bind(this);\n        this.completed = this.completed.bind(this);\n        this.updateTurn = this.updateTurn.bind(this);\n\n        this.updateBoard = this.updateBoard.bind(this);\n        this.updatePieceCnt = this.updatePieceCnt.bind(this);\n        this.addPiece = this.updateAddPiece.bind(this);\n\n        this.updateShowPos = this.updateShowPos.bind(this);\n        this.updateColorMode = this.updateColorMode.bind(this);\n        this.updatePieceStyle = this.updatePieceStyle.bind(this);\n\n        this.addHistory = this.addHistory.bind(this);\n        this.timeTravel = this.timeTravel.bind(this);\n\n        this.setPawnPromotion = this.setPawnPromotion.bind(this);\n        this.pawnPromotion = this.pawnPromotion.bind(this);\n\n        this.updateIsTimeLim = this.updateIsTimeLim.bind(this);\n        this.updateTimeLim = this.updateTimeLim.bind(this);\n        this.updateTimeLeft = this.updateTimeLeft.bind(this);\n\t}\n\n    /* Game */\n\n    newGame() {\n        localStorage.clear();\n        window.location.reload();\n    }\n\n    completed(side) {\n        side = (side === 1) ? \"black\" : \"white\";\n        this.setState({\n            complete: true,\n            winner: side,\n        });\n        lsSet(\"complete\", true);\n        lsSet(\"winner\", side);\n    }\n    \n    updateTurn() {\n        let newTurn = (this.state.turn === 2) ? 1 : 2;\n        this.setState({\n            turn: newTurn,\n        });\n        lsSet(\"turn\", newTurn);\n    }\n\n    updateBoard(origx, origy, newx, newy) {\n        let flag = false, side;\n        if (this.state.board[[newx, newy]] === \"king\") {\n            flag = true;\n            side = this.state.sideMap[[origx, origy]];\n        }\n        \n        let newBoard = this.state.board;\n        newBoard[[newx, newy]] = newBoard[[origx, origy]];\n        newBoard[[origx, origy]] = null;\n\n        let newSideMap = this.state.sideMap;\n        newSideMap[[newx, newy]] = newSideMap[[origx, origy]];\n        newSideMap[[origx, origy]] = null;\n        this.setState({\n            board: newBoard,\n            sideMap: newSideMap,\n        });\n\n        lsSet(\"board\", newBoard);\n        lsSet(\"sideMap\", newSideMap);\n\n        if (flag) {\n            this.completed(side);\n        }\n\n        return flag;\n    }\n\n    updatePieceCnt(side, piece, minus = true) {\n        side--;\n        let newPieceCnt = this.state.pieceCnt;\n        if (minus)\n            newPieceCnt[side][piece]--;\n        else\n            newPieceCnt[side][piece]++;\n        this.setState({\n            pieceCnt: newPieceCnt\n        });\n        lsSet(\"pieceCnt\", newPieceCnt);\n    }\n\n    /* Settings */\n\n    openPieceCnt() {\n        const counter = document.querySelector(\".counter\");\n        if (counter.classList.contains('open-counter')) {\n            counter.classList.remove('open-counter');\n            document.querySelector(\"#input2\").checked = false;\n        } else {\n            counter.classList.add('open-counter');\n            document.querySelector(\"#input2\").checked = true;\n        }\n    }\n\n    updateShowPos(newShowPos) {\n        this.setState({\n            showPos: newShowPos,\n        });\n    }\n\n    updateColorMode(newColorMode) {\n        this.setState({\n            colorMode: newColorMode,\n        });\n        lsSet(\"colorMode\", newColorMode);\n    }\n\n    updatePieceStyle(newPieceStyle) {\n        this.setState({\n            pieceStyle: newPieceStyle,\n        });\n        lsSet(\"pieceStyle\", newPieceStyle);\n    }\n\n    /* Time Travel (History) */\n\n    updateAddPiece(name, side, row, col) {\n        let newBoard = this.state.board;\n        newBoard[[row, col]] = name;\n        let newSideMap = this.state.sideMap;\n        newSideMap[[row, col]] = side;\n        this.setState({\n            board: newBoard,\n            sideMap: newSideMap,\n        });\n        lsSet(\"board\", newBoard);\n        lsSet(\"sideMap\", newSideMap);\n    }\n\n    updateAlterPiece(name, row, col) {\n        let newBoard = this.state.board;\n        newBoard[[row, col]] = name;\n        this.setState({\n            board: newBoard,\n        });\n        lsSet(\"board\", newBoard);\n    }\n\n    addHistory(info) {\n        // info: [old piece name], [old piece side], [old piece old row]\n        // [old piece old col], [old piece new row], [old piece new col]\n        // [take over piece name], [take over piece side], [take over piece row], [take over piece col]\n        let newHistory = this.state.history;\n        newHistory.push(info);\n        this.setState({\n            history: newHistory,\n        });\n        lsSet(\"history\", newHistory);\n    }\n\n    timeTravel(index) {\n        // reverse steps (re-add eliminated pieces)\n        const hisLen = this.state.history.length;\n        let pawnPromoCnt = 0;\n        if (hisLen === 0) return;\n        if (index < 0)\n            index = hisLen + index;\n        if (index < 0)\n            return;\n        for (let i = hisLen - 1; i >= index; i--) {\n            const entry = this.state.history[i];\n            if (entry.isPawnPromotion) {\n                this.updateAlterPiece(entry.oldPieceName, entry.row, entry.col);\n                this.updatePieceCnt(entry.side, entry.oldPieceName, false);\n                this.updatePieceCnt(entry.side, entry.newPieceName);\n                pawnPromoCnt++;\n            } else {\n                let origX = entry.pieceOldRow;\n                let origY = entry.pieceOldCol;\n                let newX = entry.pieceNewRow;\n                let newY = entry.pieceNewCol;\n                this.updateBoard(newX, newY, origX, origY);\n                let tname = entry.takeOverName;\n                let tside = entry.takeOverSide;\n                let trow = entry.takeOverRow;\n                let tcol = entry.takeOverCol;\n                if (tname) {\n                    this.updateAddPiece(tname, tside, trow, tcol);\n                    this.updatePieceCnt(tside, tname, false);\n                }\n            }\n        }\n\n        // slice off unneeded history\n        let newHistory = this.state.history;\n        newHistory = newHistory.slice(0, index);\n        this.setState({\n            history: newHistory,\n        });\n        lsSet(\"history\", newHistory);\n\n        // change turn to that at the time of the current entry\n        let entryParity = (hisLen - pawnPromoCnt - index) % 2;\n        if (entryParity === 1) {\n            this.updateTurn();\n        }\n    }\n\n    /* Pawn Promotion */\n\n    setPawnPromotion(side, row, col) {\n        this.setState({\n            pawnPromoInfo: {\n                side: side,\n                row: row,\n                col: col,\n            },\n        });\n    }\n\n    pawnPromotion(pieceName) {\n        document.body.classList.remove(\"open-promo\");\n        let side = this.state.pawnPromoInfo.side;\n        let row = this.state.pawnPromoInfo.row;\n        let col = this.state.pawnPromoInfo.col;\n        let newHistory = this.state.history;\n        newHistory.push({\n            isPawnPromotion: true,\n            oldPieceName: this.state.board[[row, col]],\n            newPieceName: pieceName,\n            side: side,\n            row: row,\n            col: col,\n        });\n        this.updatePieceCnt(side, this.state.board[[row, col]]);\n        this.updatePieceCnt(side, pieceName, false);\n        this.setState({\n            history: newHistory,\n        });\n        let newBoard = this.state.board;\n        newBoard[[row, col]] = pieceName;\n        this.setState({\n            board: newBoard,\n        });\n        lsSet(\"history\", newHistory);\n        lsSet(\"board\", newBoard);\n    }\n\n    /* Set Time Limit */\n\n    updateIsTimeLim(newIsTimeLim) {\n        this.newGame();\n        this.setState({\n            isTimeLim: newIsTimeLim,\n        });\n    }\n\n    updateTimeLim(time) {\n        this.updateIsTimeLim(true);\n        this.setState({\n            blackTime: time,\n            whiteTime: time,\n        });\n        lsSet(\"blackTime\", time);\n        lsSet(\"whiteTime\", time);\n        lsSet(\"timeLimOpt\", time);\n\n        window.location.reload();\n    }\n\n    updateTimeLeft(side, time) {\n        if (side === 1) {\n            this.setState({\n                blackTime: time,\n            });\n            lsSet(\"blackTime\", time);\n        } else {\n            this.setState({\n                whiteTime: time,\n            });\n            lsSet(\"whiteTime\", time);\n        }\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<ErrorBoundary>\n\t\t\t\t<Game\n                    {...this.state}\n                    initPieceCnt={initPieceCnt}\n\n                    newGame={this.newGame}\n                    completed={this.completed}\n                    updateTurn={this.updateTurn}\n\n                    updateBoard={this.updateBoard}\n                    updatePieceCnt={this.updatePieceCnt}\n\n                    openPieceCnt={this.openPieceCnt}\n\n                    addHistory={this.addHistory}\n\n                    setPawnPromotion={this.setPawnPromotion}\n                    pawnPromotion={this.pawnPromotion}\n                    \n                    updateIsTimeLim={this.updateIsTimeLim}\n                    updateTimeLeft={this.updateTimeLeft}\n                />\n                <Setting\n                    {...this.state}\n                    openPieceCnt={this.openPieceCnt}\n                    updateShowPos={this.updateShowPos}\n                    updateColorMode={this.updateColorMode}\n                    updatePieceStyle={this.updatePieceStyle}\n                    history={this.state.history}\n                    timeTravel={this.timeTravel}\n                    updateTimeLim={this.updateTimeLim}\n                    updateIsTimeLim={this.updateIsTimeLim}\n                />\n                <Modal />\n\t\t\t</ErrorBoundary>\n\t\t);\n\t}\n}","import React from \"react\"\nimport System from \"./components/System\"\n\nexport default class App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<System />\n\t\t\t</>\n\t\t);\n\t}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/board.css';\nimport './styles/counter.css';\nimport './styles/settings.css';\nimport './styles/timer.css';\nimport './styles/utilities.css';\nimport './styles/pawn_promotion.css';\nimport './styles/switch.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}